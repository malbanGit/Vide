/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AskAccessCode.java
 *
 * Created on 06.04.2010, 16:06:32
 */

package de.malban.gui.dialogs;

import de.malban.Global;
import de.malban.config.Configuration;
import de.malban.gui.HotKey;
import de.malban.gui.components.ModalInternalFrame;
import de.malban.gui.panels.LogPanel;
import de.malban.util.UtilityString;
import de.malban.vide.dissy.DASM6809;
import de.malban.vide.vecx.cartridge.CartridgeProperties;
import de.malban.vide.vecx.cartridge.VFCompress;
import de.malban.vide.vedi.sound.SampleJPanel;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;


/**^
 *
 * @author Malban
 */
public class FileUtil extends javax.swing.JPanel {
    LogPanel log = (LogPanel) Configuration.getConfiguration().getDebugEntity();

    static boolean error= false;
    /** Creates new form AskAccessCode */
    public FileUtil() {
        initComponents();
        jLabel7.setVisible(false);
        jLabel13.setVisible(false);
        jLabel16.setVisible(false);
        jLabel18.setVisible(false);
         if (Global.getOSName().toUpperCase().contains("MAC"))
        {
            HotKey.addMacDefaults(jTextFieldstart);
            HotKey.addMacDefaults(jTextFieldstart1);
            HotKey.addMacDefaults(jTextFieldstart2);
            HotKey.addMacDefaults(jTextFieldstart3);
            HotKey.addMacDefaults(jTextFieldstart4);
            HotKey.addMacDefaults(jTextFieldstart5);
            HotKey.addMacDefaults(jTextFieldstart6);
            HotKey.addMacDefaults(jTextFieldstart7);
            HotKey.addMacDefaults(jTextFieldstart8);
            HotKey.addMacDefaults(jTextFieldstart9);
            HotKey.addMacDefaults(jTextFieldstart10);
            HotKey.addMacDefaults(jTextFieldstart11);
            HotKey.addMacDefaults(jTextArea2);
            HotKey.addMacDefaults(jTextArea1);
        }

        HeuristicTableModel model = new HeuristicTableModel();
        jTable1.setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldstart = new javax.swing.JTextField();
        jButtonFileSelect1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldstart1 = new javax.swing.JTextField();
        jButtonFileSelect2 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldstart2 = new javax.swing.JTextField();
        jButtonFileSelect3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldstart3 = new javax.swing.JTextField();
        jButtonFileSelect4 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldstart4 = new javax.swing.JTextField();
        jButtonFileSelect5 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldstart5 = new javax.swing.JTextField();
        jButtonFileSelect6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldstart6 = new javax.swing.JTextField();
        jButtonFileSelect7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jButtonFileSelect8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldstart7 = new javax.swing.JTextField();
        jButtonFileSelect9 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldstart8 = new javax.swing.JTextField();
        jButtonFileSelect10 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldstart9 = new javax.swing.JTextField();
        jButtonFileSelect11 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jTextFieldstart11 = new javax.swing.JTextField();
        jButtonFileSelect13 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jButtonFileSelect12 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldstart10 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreahexInput = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreadbOutput = new javax.swing.JTextArea();
        jButton11 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");
        jToggleButton1.setName("jToggleButton1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel6.setName("jPanel6"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("FileUtil");
        jLabel2.setName("jLabel2"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("pad/truncate file"));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(515, 80));

        jLabel5.setText("file");
        jLabel5.setName("jLabel5"); // NOI18N

        jTextFieldstart.setName("vecxy"); // NOI18N

        jButtonFileSelect1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect1.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect1.setName("jButtonFileSelect1"); // NOI18N
        jButtonFileSelect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect1ActionPerformed(evt);
            }
        });

        jButton1.setText("pad it");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("0 byte");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("pad byte");
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField1.setText("0xff");
        jTextField1.setName("jTextField1"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("to size");
        jLabel4.setName("jLabel4"); // NOI18N

        jTextField2.setText("32768");
        jTextField2.setName("jTextField2"); // NOI18N

        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("output file -> + \".pad\"");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Ok");
        jLabel7.setName("jLabel7"); // NOI18N

        jButton8.setText("truncate it");
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Geneva", 2, 11)); // NOI18N
        jLabel21.setText("max 65536");
        jLabel21.setName("jLabel21"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldstart, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFileSelect1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jButton8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("join files"));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(545, 80));

        jLabel8.setText("file 1");
        jLabel8.setName("jLabel8"); // NOI18N

        jTextFieldstart1.setName("jTextFieldstart1"); // NOI18N

        jButtonFileSelect2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect2.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect2.setName("jButtonFileSelect2"); // NOI18N
        jButtonFileSelect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect2ActionPerformed(evt);
            }
        });

        jButton2.setText("join 'em");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("output file1 -> + \".con\"");
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setText("Ok");
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText("file 2");
        jLabel14.setName("jLabel14"); // NOI18N

        jTextFieldstart2.setName("jTextFieldstart2"); // NOI18N

        jButtonFileSelect3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect3.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect3.setName("jButtonFileSelect3"); // NOI18N
        jButtonFileSelect3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldstart2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldstart1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect2)
                .addGap(27, 27, 27)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonFileSelect2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldstart1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonFileSelect3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldstart2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("data to db"));
        jPanel3.setMinimumSize(new java.awt.Dimension(619, 85));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(503, 80));

        jLabel9.setText("file ");
        jLabel9.setName("jLabel9"); // NOI18N

        jTextFieldstart3.setName("jTextFieldstart3"); // NOI18N

        jButtonFileSelect4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect4.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect4.setName("jButtonFileSelect4"); // NOI18N
        jButtonFileSelect4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect4ActionPerformed(evt);
            }
        });

        jButton4.setText("to DB");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("output file -> + \".asm\"");
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setText("Ok");
        jLabel16.setName("jLabel16"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(24, 24, 24)
                .addComponent(jTextFieldstart3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect4)
                .addGap(31, 31, 31)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("data to db - backwards"));
        jPanel4.setMinimumSize(new java.awt.Dimension(619, 85));
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(507, 80));

        jLabel10.setText("file ");
        jLabel10.setName("jLabel10"); // NOI18N

        jTextFieldstart4.setName("jTextFieldstart4"); // NOI18N

        jButtonFileSelect5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect5.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect5.setName("jButtonFileSelect5"); // NOI18N
        jButtonFileSelect5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect5ActionPerformed(evt);
            }
        });

        jButton5.setText("to DB");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("output file  -> + \".asm\"");
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setText("Ok");
        jLabel18.setName("jLabel18"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(26, 26, 26)
                .addComponent(jTextFieldstart4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect5)
                .addGap(27, 27, 27)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect5)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);

        jButton6.setText("Helpsetmaker source convert");
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("db to bin"));
        jPanel5.setMinimumSize(new java.awt.Dimension(619, 85));
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel11.setText("file ");
        jLabel11.setName("jLabel11"); // NOI18N

        jTextFieldstart5.setName("jTextFieldstart5"); // NOI18N

        jButtonFileSelect6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect6.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect6.setName("jButtonFileSelect6"); // NOI18N
        jButtonFileSelect6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect6ActionPerformed(evt);
            }
        });

        jButton7.setText("to bin");
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("output file(s) -> + \".bin\"");
        jLabel19.setName("jLabel19"); // NOI18N

        jLabel20.setText("Ok");
        jLabel20.setName("jLabel20"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(26, 26, 26)
                .addComponent(jTextFieldstart5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect6)
                .addGap(27, 27, 27)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 694, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton6)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 585, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("1", jPanel6);

        jPanel7.setName("jPanel7"); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("64K revers 32k blocks"));
        jPanel8.setMinimumSize(new java.awt.Dimension(619, 85));
        jPanel8.setName("jPanel8"); // NOI18N
        jPanel8.setPreferredSize(new java.awt.Dimension(503, 80));

        jLabel22.setText("file ");
        jLabel22.setName("jLabel22"); // NOI18N

        jTextFieldstart6.setName("jTextFieldstart6"); // NOI18N

        jButtonFileSelect7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect7.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect7.setName("jButtonFileSelect7"); // NOI18N
        jButtonFileSelect7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect7ActionPerformed(evt);
            }
        });

        jButton9.setText("invert");
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("output file -> + \".r64.bin\"");
        jLabel23.setName("jLabel23"); // NOI18N

        jLabel24.setText("Ok");
        jLabel24.setName("jLabel24"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel22)
                .addGap(24, 24, 24)
                .addComponent(jTextFieldstart6, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect7)
                .addGap(31, 31, 31)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect7)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("heuristic binary"));
        jPanel9.setMinimumSize(new java.awt.Dimension(619, 85));
        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setPreferredSize(new java.awt.Dimension(503, 80));

        jLabel25.setText("files ");
        jLabel25.setName("jLabel25"); // NOI18N

        jButtonFileSelect8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect8.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect8.setName("jButtonFileSelect8"); // NOI18N
        jButtonFileSelect8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect8ActionPerformed(evt);
            }
        });

        jButton10.setText("build");
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("output file -> + first file+\".h.bin\"");
        jLabel26.setName("jLabel26"); // NOI18N

        jLabel27.setText("Ok");
        jLabel27.setName("jLabel27"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileSelect8)
                .addGap(227, 227, 227)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10))
            .addComponent(jScrollPane3)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect8)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("2", jPanel7);

        jPanel10.setName("jPanel10"); // NOI18N

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("z80 - 6809"));
        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setPreferredSize(new java.awt.Dimension(515, 80));

        jLabel28.setText("file");
        jLabel28.setName("jLabel28"); // NOI18N

        jTextFieldstart7.setName("jTextFieldstart7"); // NOI18N

        jButtonFileSelect9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect9.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect9.setName("jButtonFileSelect9"); // NOI18N
        jButtonFileSelect9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect9ActionPerformed(evt);
            }
        });

        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setText("output file -> + \".6809\"");
        jLabel32.setName("jLabel32"); // NOI18N

        jLabel33.setText("Ok");
        jLabel33.setName("jLabel33"); // NOI18N

        jButton12.setText("transcode");
        jButton12.setName("jButton12"); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel28)
                .addGap(27, 27, 27)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jTextFieldstart7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFileSelect9))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel32)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(63, 63, 63))
                    .addComponent(jButton12)))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect9)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("ROM to V4EB"));
        jPanel12.setName("jPanel12"); // NOI18N
        jPanel12.setPreferredSize(new java.awt.Dimension(515, 80));

        jLabel29.setText("file");
        jLabel29.setName("jLabel29"); // NOI18N

        jTextFieldstart8.setName("jTextFieldstart8"); // NOI18N

        jButtonFileSelect10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect10.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect10.setName("jButtonFileSelect10"); // NOI18N
        jButtonFileSelect10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect10ActionPerformed(evt);
            }
        });

        jLabel34.setForeground(new java.awt.Color(102, 102, 102));
        jLabel34.setName("jLabel34"); // NOI18N

        jLabel35.setText("Ok");
        jLabel35.setName("jLabel35"); // NOI18N

        jButton13.setText("V4EB");
        jButton13.setName("jButton13"); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "read only ROM", "ROM pls RAM", "VecVever", "ROM + DS2430", "ROM + DS2431", "ROM + xx PB6", "ROM 50k flat (n/a)", "ROM +16k at $8000 (n/a)", "ROM with 2x48k (serial)", "hybrid binary", "ROM 4x48k (serial)" }));
        jComboBox1.setName("jComboBox1"); // NOI18N

        jLabel43.setText("type");
        jLabel43.setName("jLabel43"); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jComboBox2.setName("jComboBox2"); // NOI18N

        jLabel44.setText("banks");
        jLabel44.setName("jLabel44"); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(27, 27, 27)
                        .addComponent(jTextFieldstart8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addGap(20, 20, 20)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonFileSelect10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonFileSelect10)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldstart8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1)
                                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel44))))
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("ExtremeVectrex to V4EB"));
        jPanel13.setName("jPanel13"); // NOI18N
        jPanel13.setPreferredSize(new java.awt.Dimension(515, 80));

        jLabel30.setText("file");
        jLabel30.setName("jLabel30"); // NOI18N

        jTextFieldstart9.setName("jTextFieldstart9"); // NOI18N

        jButtonFileSelect11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect11.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect11.setName("jButtonFileSelect11"); // NOI18N
        jButtonFileSelect11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect11ActionPerformed(evt);
            }
        });

        jLabel36.setForeground(new java.awt.Color(102, 102, 102));
        jLabel36.setText("Enter a \"big\" bin file...");
        jLabel36.setName("jLabel36"); // NOI18N

        jLabel37.setText("Ok");
        jLabel37.setName("jLabel37"); // NOI18N

        jButton14.setText("V4EB");
        jButton14.setName("jButton14"); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel30)
                .addGap(27, 27, 27)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jTextFieldstart9, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFileSelect11))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect11)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Music to V4EB"));
        jPanel15.setName("jPanel15"); // NOI18N
        jPanel15.setPreferredSize(new java.awt.Dimension(515, 80));

        jLabel38.setText("file");
        jLabel38.setName("jLabel38"); // NOI18N

        jTextFieldstart11.setName("jTextFieldstart11"); // NOI18N

        jButtonFileSelect13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect13.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect13.setName("jButtonFileSelect13"); // NOI18N
        jButtonFileSelect13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect13ActionPerformed(evt);
            }
        });

        jLabel39.setForeground(new java.awt.Color(102, 102, 102));
        jLabel39.setText("Enter a \"WAV\" file...");
        jLabel39.setName("jLabel39"); // NOI18N

        jLabel40.setText("Ok");
        jLabel40.setName("jLabel40"); // NOI18N

        jButton15.setText("V4EB");
        jButton15.setName("jButton15"); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel38)
                .addGap(27, 27, 27)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jTextFieldstart11, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFileSelect13))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonFileSelect13)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        jLabel39.getAccessibleContext().setAccessibleName("Enter a \"music\" bin file...");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 230, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("3", jPanel10);

        jPanel14.setName("jPanel14"); // NOI18N

        jButtonFileSelect12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/folder_go.png"))); // NOI18N
        jButtonFileSelect12.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonFileSelect12.setName("jButtonFileSelect12"); // NOI18N
        jButtonFileSelect12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelect12ActionPerformed(evt);
            }
        });

        jLabel31.setText("VB smartList changes");
        jLabel31.setName("jLabel31"); // NOI18N

        jTextFieldstart10.setName("jTextFieldstart10"); // NOI18N

        jLabel41.setText("Ok");
        jLabel41.setName("jLabel41"); // NOI18N

        jButton16.setText("process");
        jButton16.setName("jButton16"); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel42.setForeground(new java.awt.Color(102, 102, 102));
        jLabel42.setText("output file -> + \".asm\"");
        jLabel42.setName("jLabel42"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jTextAreahexInput.setColumns(20);
        jTextAreahexInput.setRows(5);
        jTextAreahexInput.setName("jTextAreahexInput"); // NOI18N
        jScrollPane4.setViewportView(jTextAreahexInput);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jTextAreadbOutput.setColumns(20);
        jTextAreadbOutput.setRows(5);
        jTextAreadbOutput.setName("jTextAreadbOutput"); // NOI18N
        jScrollPane5.setViewportView(jTextAreadbOutput);

        jButton11.setText("raw hex to db");
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(27, 27, 27)
                        .addComponent(jTextFieldstart10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFileSelect12))
                    .addComponent(jLabel42))
                .addGap(115, 115, 115)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addComponent(jButton16))
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton11)
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(38, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonFileSelect12, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldstart10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(526, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(210, 210, 210)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                        .addComponent(jScrollPane4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(211, 211, 211)))
        );

        jTabbedPane1.addTab("4", jPanel14);

        jButton3.setText("done");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        error = false;
        byte padFiller = (byte)(toNumber(jTextField1.getText())&0xff);
        int padLength = toNumber(jTextField2.getText());
        if (error) 
        {
            jLabel7.setText("error");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.red);
        }
        error = !de.malban.util.UtilityFiles.padFile(jTextFieldstart.getText(), padFiller, padLength);
        if (error) 
        {
            jLabel7.setText("error");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.red);
        }
        else
        {
            jLabel7.setText("Ok");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.green);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonFileSelect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect1ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart.setText(name);
        
        File file = new File(name);
        long len = file.length(); 
        jLabel1.setText(""+len+" bytes");
    }//GEN-LAST:event_jButtonFileSelect1ActionPerformed

    private void jButtonFileSelect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect2ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart1.setText(name);
        lastDir = fc.getCurrentDirectory().toString();
    }//GEN-LAST:event_jButtonFileSelect2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String file1 = jTextFieldstart1.getText();
        String file2 = jTextFieldstart2.getText();
        
        error = !de.malban.util.UtilityFiles.concatFiles(file1, file2);
        if (error) 
        {
            jLabel13.setText("error");
            jLabel13.setVisible(true);
            jLabel13.setForeground(Color.red);
        }
        else
        {
            jLabel13.setText("Ok");
            jLabel13.setVisible(true);
            jLabel13.setForeground(Color.green);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonFileSelect3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect3ActionPerformed
    InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart2.setText(name);  
        lastDir = fc.getCurrentDirectory().toString();
    }//GEN-LAST:event_jButtonFileSelect3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonFileSelect4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect4ActionPerformed
    InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(lastDir));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart3.setText(name);  
        lastDir = fc.getCurrentDirectory().toString();
    }//GEN-LAST:event_jButtonFileSelect4ActionPerformed
    String lastDir =Global.mainPathPrefix;
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jLabel16.setVisible(false);
        try
        {
            String file1 = jTextFieldstart3.getText();
            Path path = Paths.get(file1);
            byte[] data = Files.readAllBytes(path);

            StringBuffer buf = new StringBuffer();
            int count = 0;
            buf.append("; DB - Data of file: \""+file1+"\"\n");
            for (int i=0; i< data.length;i++)
            {
                if (count == 0)
                {
                    buf.append(" DB ");
                }
                else
                {
                    buf.append(", ");

                }
                buf.append(String.format("$%02X",data[i] ));
                count++;
                if (count == 10)
                {
                    count =0;
                    buf.append("\n" );
                }
            }
            de.malban.util.UtilityFiles.createTextFile(file1+".asm", buf.toString());
            jLabel16.setText("Ok");
            jLabel16.setVisible(true);
            jLabel16.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            jLabel16.setText("error");
            jLabel16.setVisible(true);
            jLabel16.setForeground(Color.red);
            
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonFileSelect5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect5ActionPerformed
    InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(lastDir));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart4.setText(name);  
        lastDir = fc.getCurrentDirectory().toString();
    }//GEN-LAST:event_jButtonFileSelect5ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jLabel18.setVisible(false);
        try
        {
            String file1 = jTextFieldstart4.getText();
            Path path = Paths.get(file1);
            byte[] data = Files.readAllBytes(path);

            StringBuffer buf = new StringBuffer();
            int count = 0;
            buf.append("; DB backwards - Data of file: \""+file1+"\"\n");
            for (int i=data.length-1; i>=0 ;i--)
            {
                if (count == 0)
                {
                    buf.append(" DB ");
                }
                else
                {
                    buf.append(", ");

                }
                buf.append(String.format("$%02X",data[i] ));
                count++;
                if (count == 10)
                {
                    count =0;
                    buf.append("\n" );
                }
            }
            de.malban.util.UtilityFiles.createTextFile(file1+".asm", buf.toString());
            jLabel18.setText("Ok");
            jLabel18.setVisible(true);
            jLabel18.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            jLabel18.setText("error");
            jLabel18.setVisible(true);
            jLabel18.setForeground(Color.red);
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String from = jTextArea2.getText();
        from = UtilityString.replace(from, "\r\n", "\n");
        String[] lines = from.split("\n");
        StringBuffer to = new StringBuffer();
        to.append(":div code\n::\n");
        for (String line: lines)
        {
            String out="";
            line = UtilityString.replaceWhiteSpaces(line , " ");
            line = UtilityString.replace(line, "_", "\\_");
            line = UtilityString.replace(line, "**", "\\**");
            line = UtilityString.replace(line, "==", "\\==");
            line = UtilityString.replace(line, "((", "\\((");
            line = UtilityString.replace(line, "))", "\\))");
            line = UtilityString.replace(line, "//", "\\//");
            line = UtilityString.replace(line, "::", "\\::");

            // above can still result in triplets
            line = UtilityString.replace(line, "\\___", "\\_\\__");
            line = UtilityString.replace(line, "\\***", "\\*\\**");
            line = UtilityString.replace(line, "\\===", "\\=\\==");
            line = UtilityString.replace(line, "\\(((", "\\(\\((");
            line = UtilityString.replace(line, "\\)))", "\\)\\))");
            line = UtilityString.replace(line, "\\///", "\\/\\//");
            line = UtilityString.replace(line, "\\:::", "\\:\\::");

            String p1 =""; // label
            String p2 =""; // mnemonic
            String p3 =""; // operand
            String p4 =""; // comment
            
            p1 = getLineLabel(line);
            if (p1.length() > 0)
                line = UtilityString.replace(line, p1, "");
            line = line.trim();
            

            p2 = getLineMnemonic(line);
            if (p2.length() > 0)
                line = UtilityString.replace(line, p2, "");
            line = line.trim();
            
            p3 = getLineOperand(line);
            if (p3.length() > 0)
                line = UtilityString.replace(line, p3, "");
            line = line.trim();

            p4 = getLineComment(line);
            if (p4.length() > 0)
                line = UtilityString.replace(line, p4, "");
            line = line.trim();

            if (p2.startsWith(";"))
            {
                p4 = p2+" " + p3;
                p2 = "";
                p3 = "";
            }
            if (p3.startsWith(";"))
            {
                p4 = p3;
                p3 = "";
            }
            
            
            out = spacesUpTo(out, 12, p1);
            out = spacesUpTo(out, 20, p2);
            out = spacesUpTo(out, 40, p3);
            out = spacesUpTo(out, 0, p4);

            out = UtilityString.replace(out, " ", "_");
            
            
            to.append(out);
            to.append("~~\n");
        }
        to.append("::\n:/div\n");
        
        jTextArea1.setText(to.toString());
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButtonFileSelect6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect6ActionPerformed

        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setMultiSelectionEnabled(true);
        if (lastDir.length()==0)
        {
            fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        }
        else
        {
            fc.setCurrentDirectory(new java.io.File(lastDir));
        }
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        File[] files = fc.getSelectedFiles();
        if (files == null)
        {
            File f = fc.getSelectedFile();
            if (f != null)
            {
                String fullPath = f.getAbsolutePath();
                lastDir = fullPath;
                fileToBin(f);
            }
            
        }
        else // add multiple images
        {
            String fullPath = files[0].getAbsolutePath();
            lastDir = fullPath;
            for (File f : files)
                fileToBin(f);
        }        
    }//GEN-LAST:event_jButtonFileSelect6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        error = false;
        int padLength = toNumber(jTextField2.getText());
        if (padLength==0) padLength = 65536;
        if (error) 
        {
            jLabel7.setText("error");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.red);
        }
        error = !de.malban.util.UtilityFiles.truncateFile(jTextFieldstart.getText(), padLength);
        if (error) 
        {
            jLabel7.setText("error");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.red);
        }
        else
        {
            jLabel7.setText("Ok");
            jLabel7.setVisible(true);
            jLabel7.setForeground(Color.green);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButtonFileSelect7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect7ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart6.setText(name);
        
    }//GEN-LAST:event_jButtonFileSelect7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String filename = jTextFieldstart6.getText();
        
        
        File file = new File(filename);
        long len = file.length();
        if (len!=65536)
        {
            jLabel24.setText("wrong size");
            jLabel24.setVisible(true);
            jLabel24.setForeground(Color.red);
            return;
        }

        try
        {
            Path path = Paths.get(filename);
            byte[] data = Files.readAllBytes(path);            
            FileOutputStream output = new FileOutputStream(filename+".r64.bin", true);
            try 
            {
               output.write(data,32768,32768);
               output.write(data,0,32768);
            } 
            finally 
            {
               output.close();
            }        
        }
        catch (Throwable e)
        {
            jLabel24.setText("error");
            jLabel24.setVisible(true);
            jLabel24.setForeground(Color.red);
            return;
        }
        
        jLabel24.setText("Ok");
        jLabel24.setVisible(true);
        jLabel24.setForeground(Color.green);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButtonFileSelect8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect8ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        fc.setMultiSelectionEnabled(true);
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        File[] files = fc.getSelectedFiles();
        doHeuristicPreparation(files);
        jTable1.tableChanged(null);
    }//GEN-LAST:event_jButtonFileSelect8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        buildHeuristic();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonFileSelect9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect9ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart7.setText(name);
    }//GEN-LAST:event_jButtonFileSelect9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        error = false;
        if (error) 
        {
            jLabel33.setText("error");
            jLabel33.setVisible(true);
            jLabel33.setForeground(Color.red);
        }
        error = !de.malban.util.TranscodeZ80To6809.doTranscode(jTextFieldstart7.getText(), jTextFieldstart7.getText()+".6809");
        if (error) 
        {
            jLabel33.setText("error");
            jLabel33.setVisible(true);
            jLabel33.setForeground(Color.red);
        }
        else
        {
            jLabel33.setText("Ok");
            jLabel33.setVisible(true);
            jLabel33.setForeground(Color.green);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButtonFileSelect10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect10ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart8.setText(name);
    }//GEN-LAST:event_jButtonFileSelect10ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jLabel35.setVisible(false);
        try
        {
            String file1 = jTextFieldstart8.getText();
            Path path = Paths.get(file1);
            byte[] data = Files.readAllBytes(path);
 

            int cart_type = jComboBox1.getSelectedIndex();
            int additional = 0;
            if ((cart_type==6) || (cart_type==7)|| (cart_type==8)|| (cart_type==10)) 
                additional = 16;
            
            int no_banks = jComboBox2.getSelectedIndex()+1;
            if (cart_type==8) no_banks = 3;
            if (cart_type==6) no_banks = 2; // 32k + 16k
            int sizeAll = 0;
            byte header[] = new byte[sizeAll];
            if (no_banks==1)
            {
                VFCompress compressor = new VFCompress();
                compressor.compressData(data, 1024*(32+additional));
                sizeAll = 4+2+2+no_banks*6+compressor.dzipdata_size;
                header = new byte[sizeAll];



                int index=0;
                header[index++] = 'V';          // 0 header
                header[index++] = '4';
                header[index++] = 'E';
                header[index++] = 'B';

                header[index++] = (byte) ((cart_type>> 8)&0xff);      // 4
                header[index++] = (byte) ((cart_type    )&0xff);

                header[index++] = (byte) ((no_banks>> 8)&0xff);      // 6
                header[index++] = (byte) ((no_banks    )&0xff);

                header[index++] = (byte) ((compressor.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor.dzipdata_crc    )&0xff);

                header[index++] = (byte) ((compressor.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor.dzipdata_size    )&0xff);
                for (int i=0; i<compressor.dzipdata_size; i++)
                {
                    header[index++] = compressor.dzipdata[i];
                }                
            }
            else if (no_banks==2) // assuming 6
            {
                VFCompress compressor1 = new VFCompress();
                VFCompress compressor2 = new VFCompress();
                byte[] data1 = new byte[1024*(32)];
                byte[] data2 = new byte[1024*(16)];
                for (int i=0; i<1024*(32);i++ )
                {
                    data1[i] = data[i];
                }
                for (int i=0; i<1024*(16);i++ )
                {
                    data2[i] = data[i+1024*(32)];
                }
                
                
                compressor1.compressData(data1, 1024*(32));
                compressor2.compressData(data2, 1024*(16));
                sizeAll = 4+2+2+no_banks*6+compressor1.dzipdata_size+compressor2.dzipdata_size;
                header = new byte[sizeAll];



                int index=0;
                header[index++] = 'V';          // 0 header
                header[index++] = '4';
                header[index++] = 'E';
                header[index++] = 'B';

                header[index++] = (byte) ((cart_type>> 8)&0xff);      // 4
                header[index++] = (byte) ((cart_type    )&0xff);

                header[index++] = (byte) ((no_banks>> 8)&0xff);      // 6
                header[index++] = (byte) ((no_banks    )&0xff);

                header[index++] = (byte) ((compressor1.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor1.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor1.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor1.dzipdata_crc    )&0xff);

                header[index++] = (byte) ((compressor1.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor1.dzipdata_size    )&0xff);
                
                header[index++] = (byte) ((compressor2.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor2.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor2.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor2.dzipdata_crc    )&0xff);

                header[index++] = (byte) ((compressor2.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor2.dzipdata_size    )&0xff);
                for (int i=0; i<compressor1.dzipdata_size; i++)
                {
                    header[index++] = compressor1.dzipdata[i];
                }                                
                for (int i=0; i<compressor2.dzipdata_size; i++)
                {
                    header[index++] = compressor2.dzipdata[i];
                }                                
            }
            else if (no_banks==3) // assume 8
            {
                VFCompress compressor1 = new VFCompress();
                VFCompress compressor2 = new VFCompress();
                VFCompress compressor3 = new VFCompress();
                byte[] data1 = new byte[1024*(32)]; // first 32k of bank 0
                byte[] data2 = new byte[1024*(32)]; // first 32k of bank 1
                byte[] data3 = new byte[1024*(32)]; // 16k bank 0 + 16k bank 1
                for (int i=0; i<1024*(32);i++ )
                {
                    data1[i] = data[i]; // bank 0, 32k
                    data2[i] = data[i+1024*64];// bank 1, 32k
                }
                for (int i=0; i<1024*(16);i++ )
                {
                    data3[i] = data[i+32*1024]; // bank 0, 16k
                    data3[i+16*1024] = data[i+1024*(64+32)];// bank 1, 16k
                }
                
                
                compressor1.compressData(data1, 1024*(32));
                compressor2.compressData(data2, 1024*(32));
                compressor3.compressData(data3, 1024*(32));
                sizeAll = 4+2+2+no_banks*6+compressor1.dzipdata_size+compressor2.dzipdata_size+compressor3.dzipdata_size;
                header = new byte[sizeAll];

                int index=0;
                header[index++] = 'V';          // 0 header
                header[index++] = '4';
                header[index++] = 'E';
                header[index++] = 'B';

                header[index++] = (byte) ((cart_type>> 8)&0xff);      // 4
                header[index++] = (byte) ((cart_type    )&0xff);

                header[index++] = (byte) ((no_banks>> 8)&0xff);      // 6
                header[index++] = (byte) ((no_banks    )&0xff);

                header[index++] = (byte) ((compressor1.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor1.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor1.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor1.dzipdata_crc    )&0xff);
                header[index++] = (byte) ((compressor1.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor1.dzipdata_size    )&0xff);
                
                header[index++] = (byte) ((compressor2.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor2.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor2.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor2.dzipdata_crc    )&0xff);
                header[index++] = (byte) ((compressor2.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor2.dzipdata_size    )&0xff);

                header[index++] = (byte) ((compressor3.dzipdata_crc>>24)&0xff);   // 8
                header[index++] = (byte) ((compressor3.dzipdata_crc>>16)&0xff);
                header[index++] = (byte) ((compressor3.dzipdata_crc>> 8)&0xff);
                header[index++] = (byte) ((compressor3.dzipdata_crc    )&0xff);
                header[index++] = (byte) ((compressor3.dzipdata_size>> 8)&0xff);  // 12
                header[index++] = (byte) ((compressor3.dzipdata_size    )&0xff);

                for (int i=0; i<compressor1.dzipdata_size; i++)
                {
                    header[index++] = compressor1.dzipdata[i];
                }                                
                for (int i=0; i<compressor2.dzipdata_size; i++)
                {
                    header[index++] = compressor2.dzipdata[i];
                }                                
                for (int i=0; i<compressor3.dzipdata_size; i++)
                {
                    header[index++] = compressor3.dzipdata[i];
                }                                
            }
            else
            {
                log.addLog("Only 2 banks supported at the moment!", ERROR);
            }


            FileOutputStream output = new FileOutputStream(file1+".v4e", true);
            try 
            {
               output.write(header,0, sizeAll);
            } 
            finally 
            {
               output.close();
            }        
            

            
            jLabel35.setText("Ok");
            jLabel35.setVisible(true);
            jLabel35.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            e.printStackTrace();
            jLabel35.setText("error");
            jLabel35.setVisible(true);
            jLabel35.setForeground(Color.red);
            
        }
        
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonFileSelect11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect11ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart9.setText(name);

    }//GEN-LAST:event_jButtonFileSelect11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jLabel37.setVisible(false);
        try
        {
            String file1 = jTextFieldstart9.getText();
            Path path = Paths.get(file1);
            byte[] data = Files.readAllBytes(path);
            byte[] data2 = new byte[32768]; //dummy bank 0

            // format of extreme out is:
            /*
               one bank (frame) size is: 0x600
               split to:
               video data - size: 0x400, start at 0x000,  is loaded to 0x4000
               audio sample - size: 0x200, start at 0x400  data - is loaded to 0x4400
            
               Thomas play routine uses:
               ASSUMING bank data is always read to 0x4000 (16k)
            
               one bank (frame) size is: 0xc00
               split to:
               video data 1 - size: 0x400, start at 0x000,  is loaded to 0x4000
               audio sample 1 - size: 0x200, start at 0x400  data - is loaded to 0x4400

               video data 2 - size: 0x400, start at 0x600,  is loaded to 0x4600
               audio sample 2 - size: 0x200, start at 0xa00  data - is loaded to 0x4a00
            
               one "double" frame in the vecFever than has 3072 (0xc00) bytes

               The player can allways be the same.
            */
            
            
            final int MAX_BANK_DATA = (0x400+0x200)* 2;
            
            int banks=data.length / (MAX_BANK_DATA);
            class HeaderInfo
            {
                byte[] h = new byte[6];
            }
            ArrayList<HeaderInfo> headers = new ArrayList<HeaderInfo>();
            ArrayList<byte[]> datas = new ArrayList<byte[]>();
            ArrayList<byte[]> datasZiped = new ArrayList<byte[]>();
            
            int sizeAll = 0;
            VFCompress compressor = new VFCompress();
            for (int i=0; i <banks; i++)
            {
                datas.add(new byte[MAX_BANK_DATA]);
                headers.add(new HeaderInfo());
                
                for (int t=0;t<MAX_BANK_DATA;t++)
                {
                    datas.get(i)[t] = data[i*MAX_BANK_DATA+t];
                }
                compressor.compressData(datas.get(i), MAX_BANK_DATA);
                int index = 0;
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>>24)&0xff);   // 8
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>>16)&0xff);
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>> 8)&0xff);
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc    )&0xff);

                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_size>> 8)&0xff);  // 12
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_size    )&0xff);
                
                datasZiped.add(compressor.dzipdata);
                sizeAll+=6+compressor.dzipdata_size;
                
            }
            String mainFile = Global.mainPathPrefix+"template"+File.separator+"ExtremePlayer.bin";

            path = Paths.get(mainFile);
            data = Files.readAllBytes(path);
            
            
            
            
            VFCompress compressor2 = new VFCompress();
            compressor2.compressData(data2, 1024*32);
            compressor.compressData(data, 1024*32);

            int no_banks = 2;
            int sizeAllMain = 4+2+2+no_banks*6+compressor.dzipdata_size+compressor2.dzipdata_size;
            sizeAll += sizeAllMain;
            
            byte header[] = new byte[sizeAll];
            
            int index=0;
            header[index++] = 'V';          // 0 header
            header[index++] = '4';
            header[index++] = 'E';
            header[index++] = 'B';

            int cart_type = 2;
            header[index++] = (byte) ((cart_type>> 8)&0xff);      // 4
            header[index++] = (byte) ((cart_type    )&0xff);

            header[index++] = (byte) (((no_banks+banks)>> 8)&0xff);      // 6
            header[index++] = (byte) (((no_banks+banks)    )&0xff);

            // dummy bank 0
            header[index++] = (byte) ((compressor2.dzipdata_crc>>24)&0xff);   // 8
            header[index++] = (byte) ((compressor2.dzipdata_crc>>16)&0xff);
            header[index++] = (byte) ((compressor2.dzipdata_crc>> 8)&0xff);
            header[index++] = (byte) ((compressor2.dzipdata_crc    )&0xff);

            header[index++] = (byte) ((compressor2.dzipdata_size>> 8)&0xff);  // 12
            header[index++] = (byte) ((compressor2.dzipdata_size    )&0xff);
            // bank 1 with our program
            header[index++] = (byte) ((compressor.dzipdata_crc>>24)&0xff);   // 8
            header[index++] = (byte) ((compressor.dzipdata_crc>>16)&0xff);
            header[index++] = (byte) ((compressor.dzipdata_crc>> 8)&0xff);
            header[index++] = (byte) ((compressor.dzipdata_crc    )&0xff);

            header[index++] = (byte) ((compressor.dzipdata_size>> 8)&0xff);  // 12
            header[index++] = (byte) ((compressor.dzipdata_size    )&0xff);
            
            for (int i=0; i<banks; i++)
            {
                header[index++] = (byte) headers.get(i).h[0];   // 8
                header[index++] = (byte) headers.get(i).h[1];
                header[index++] = (byte) headers.get(i).h[2];
                header[index++] = (byte) headers.get(i).h[3];

                header[index++] = (byte) headers.get(i).h[4];  // 12
                header[index++] = (byte) headers.get(i).h[5];
            }
            
            
            for (int i=0; i<compressor2.dzipdata_size; i++)
            {
                header[index++] = compressor2.dzipdata[i];
            }
            for (int i=0; i<compressor.dzipdata_size; i++)
            {
                header[index++] = compressor.dzipdata[i];
            }

            for (int i=0; i<banks; i++)
            {
                int size = (headers.get(i).h[4]&0xff)*256+(headers.get(i).h[5]&0xff);
                for (int t=0; t<size;t++)
                {
                    header[index++] = (byte) datasZiped.get(i)[t];   // 8
                }
            }
            
            new File (file1+".v4e").delete();
            FileOutputStream output = new FileOutputStream(file1+".v4e", true);
            try 
            {
               output.write(header,0, sizeAll);
            } 
            finally 
            {
               output.close();
            }        
            

            
            jLabel37.setText("Ok");
            jLabel37.setVisible(true);
            jLabel37.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            log.addLog(e);
            e.printStackTrace();
            jLabel37.setText("error");
            jLabel37.setVisible(true);
            jLabel37.setForeground(Color.red);
            
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButtonFileSelect12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect12ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("asm", "asm");
        fc.setFileFilter(filter);
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != JFileChooser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart10.setText(name);
    }//GEN-LAST:event_jButtonFileSelect12ActionPerformed

    private void jButtonFileSelect13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileSelect13ActionPerformed
        InternalFrameFileChoser fc = new de.malban.gui.dialogs.InternalFrameFileChoser();
        fc.setCurrentDirectory(new java.io.File(Global.mainPathPrefix));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("wav", "wav");
        fc.setFileFilter(filter);
        int r = fc.showOpenDialog(Configuration.getConfiguration().getMainFrame());
        if (r != InternalFrameFileChoser.APPROVE_OPTION) return;
        String name = fc.getSelectedFile().getAbsolutePath();
        jTextFieldstart11.setText(name);
    }//GEN-LAST:event_jButtonFileSelect13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        SampleJPanel sPanel = new SampleJPanel(de.malban.util.Utility.makeVideRelative(jTextFieldstart11.getText()));
        sPanel.setVectrexValues(10000, 8, 1);
        byte[] samples = sPanel.convertToVectrex(false);

final int SAMPLE_OVERFLOW_BUFFER = 0;        
        
        for (int index8=0; index8<samples.length; index8++)
        {
            int data8=0;
            data8=samples[index8]; 
            data8-=128;
            samples[index8] = (byte)data8;
        }

//        try
//        {
//            samples = Files.readAllBytes(Paths.get("LaLinea30.bin"));
            
//        }
//       catch(Throwable e)
//        {
//            e.printStackTrace();
//        }
        
        
        jLabel40.setVisible(false);
        try
        {
            String file1 = jTextFieldstart11.getText();
            Path path = Paths.get(file1);
            byte[] data = samples;

            new File (path+".bin").delete();
            FileOutputStream output1 = new FileOutputStream(path+".bin", true);
            try 
            {
               output1.write(data,0, samples.length);
            } 
            finally 
            {
               output1.close();
            }        




            byte[] data2 = new byte[32768]; //dummy bank 0

            // format of extreme out is:
            /*
               one bank (frame) size is: 0x600
               split to:
               video data - size: 0x400, start at 0x000,  is loaded to 0x4000
               audio sample - size: 0x200, start at 0x400  data - is loaded to 0x4400
            
               Thomas play routine uses:
               ASSUMING bank data is always read to 0x4000 (16k)
            
               one bank (frame) size is: 0xc00
               split to:
               video data 1 - size: 0x400, start at 0x000,  is loaded to 0x4000
               audio sample 1 - size: 0x200, start at 0x400  data - is loaded to 0x4400

               video data 2 - size: 0x400, start at 0x600,  is loaded to 0x4600
               audio sample 2 - size: 0x200, start at 0xa00  data - is loaded to 0x4a00
            
               one "double" frame in the vecFever than has 3072 (0xc00) bytes

               The player can allways be the same.
            */
            
            
            final int MAX_BANK_DATA = (0x400+0x200)* 1;



            
            int banks=data.length / (MAX_BANK_DATA);
banks += ((banks*SAMPLE_OVERFLOW_BUFFER)+(SAMPLE_OVERFLOW_BUFFER-1)) / (MAX_BANK_DATA);
            
            
            
            
            
            class HeaderInfo
            {
                byte[] h = new byte[6];
            }
            ArrayList<HeaderInfo> headers = new ArrayList<HeaderInfo>();
            ArrayList<byte[]> datas = new ArrayList<byte[]>();
            ArrayList<byte[]> datasZiped = new ArrayList<byte[]>();
            
            int sizeAll = 0;
            VFCompress compressor = new VFCompress();
            int readPointer = 0;
            for (int i=0; i <banks; i++)

            {
                datas.add(new byte[MAX_BANK_DATA*2]); //packed data CAN be larger than unpacked - e.g. if no packing canbe done, than lots of 128 byte runs
//                datas.add(new byte[MAX_BANK_DATA]); //packed data CAN be larger than unpacked - e.g. if no packing canbe done, than lots of 128 byte runs
                headers.add(new HeaderInfo());
                
                for (int t=0;t<MAX_BANK_DATA-SAMPLE_OVERFLOW_BUFFER;t++)
                {
                    datas.get(i)[t] = data[readPointer++];
                }
                compressor.compressData(datas.get(i), MAX_BANK_DATA);
                int index = 0;
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>>24)&0xff);   // 8
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>>16)&0xff);
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc>> 8)&0xff);
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_crc    )&0xff);

                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_size>> 8)&0xff);  // 12
                headers.get(i).h[index++] = (byte) ((compressor.dzipdata_size    )&0xff);
                
                datasZiped.add(compressor.dzipdata);
                sizeAll+=6+compressor.dzipdata_size;
                
            }
            String mainFile = Global.mainPathPrefix+"template"+File.separator+"WavPlayer.bin";

            path = Paths.get(mainFile);
            data = Files.readAllBytes(path);
            
            
            
            
            VFCompress compressor2 = new VFCompress();
            compressor2.compressData(data2, 1024*32);
            compressor.compressData(data, 1024*32);

            int no_banks = 2;
            int sizeAllMain = 4+2+2+no_banks*6+compressor.dzipdata_size+compressor2.dzipdata_size;
            sizeAll += sizeAllMain;
            
            byte header[] = new byte[sizeAll];
            
            int index=0;
            header[index++] = 'V';          // 0 header
            header[index++] = '4';
            header[index++] = 'E';
            header[index++] = 'B';

            int cart_type = 2;
            header[index++] = (byte) ((cart_type>> 8)&0xff);      // 4
            header[index++] = (byte) ((cart_type    )&0xff);

            header[index++] = (byte) (((no_banks+banks)>> 8)&0xff);      // 6
            header[index++] = (byte) (((no_banks+banks)    )&0xff);

            // dummy bank 0
            header[index++] = (byte) ((compressor2.dzipdata_crc>>24)&0xff);   // 8
            header[index++] = (byte) ((compressor2.dzipdata_crc>>16)&0xff);
            header[index++] = (byte) ((compressor2.dzipdata_crc>> 8)&0xff);
            header[index++] = (byte) ((compressor2.dzipdata_crc    )&0xff);

            header[index++] = (byte) ((compressor2.dzipdata_size>> 8)&0xff);  // 12
            header[index++] = (byte) ((compressor2.dzipdata_size    )&0xff);
            // bank 1 with our program
            header[index++] = (byte) ((compressor.dzipdata_crc>>24)&0xff);   // 8
            header[index++] = (byte) ((compressor.dzipdata_crc>>16)&0xff);
            header[index++] = (byte) ((compressor.dzipdata_crc>> 8)&0xff);
            header[index++] = (byte) ((compressor.dzipdata_crc    )&0xff);

            header[index++] = (byte) ((compressor.dzipdata_size>> 8)&0xff);  // 12
            header[index++] = (byte) ((compressor.dzipdata_size    )&0xff);
            
            for (int i=0; i<banks; i++)
            {
                header[index++] = (byte) headers.get(i).h[0];   // 8
                header[index++] = (byte) headers.get(i).h[1];
                header[index++] = (byte) headers.get(i).h[2];
                header[index++] = (byte) headers.get(i).h[3];

                header[index++] = (byte) headers.get(i).h[4];  // 12
                header[index++] = (byte) headers.get(i).h[5];
            }
            
            
            for (int i=0; i<compressor2.dzipdata_size; i++)
            {
                header[index++] = compressor2.dzipdata[i];
            }
            for (int i=0; i<compressor.dzipdata_size; i++)
            {
                header[index++] = compressor.dzipdata[i];
            }

            for (int i=0; i<banks; i++)
            {
                int size = (headers.get(i).h[4]&0xff)*256+(headers.get(i).h[5]&0xff);
                for (int t=0; t<size;t++)
                {
                    header[index++] = (byte) datasZiped.get(i)[t];   // 8
                }
            }
            
            new File (file1+".v4e").delete();
            FileOutputStream output = new FileOutputStream(file1+".v4e", true);
            try 
            {
               output.write(header,0, sizeAll);
            } 
            finally 
            {
               output.close();
            }        
            jLabel40.setText("Ok");
            jLabel40.setVisible(true);
            jLabel40.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            log.addLog(e);
            e.printStackTrace();
            jLabel40.setText("error");
            jLabel40.setVisible(true);
            jLabel40.setForeground(Color.red);
            
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed

        String line="";
        String f="";
        String s="";

        jLabel41.setVisible(false);
        try
        {
            String file1 = jTextFieldstart10.getText();
            Vector<String> strings = de.malban.util.UtilityString.readTextFileToString(new File(file1));
            StringBuilder b = new StringBuilder();
            boolean inList = false;



            for (int i=0; i< strings.size(); i++)
            {
                line = strings.elementAt(i);
                if ((line.contains("hi(")) && (line.contains("lo(")))
                {
                    inList = true;
                    // interesting line!
                                        
                }
                if (!inList)
                {
                    // append as is
                    b.append(line).append("\n");
                    continue;
                }
                else
                {

                    // assume starting with DB
                    // assume two values
                    // assume rest after two values hi/lo text(s)
                    f = getFirstValue(line).trim();
                    s = getSecondValue(line).trim();
                    
                    if (f.length()==0)
                    {
                        System.out.println("No first value found in line "+i+": "+line);
                        b.append(line).append("\n");
                        continue;
                    }
                    if (s.length()==0)
                    {
                        System.out.println("No second value found in line "+i+": "+line);
                        b.append(line).append("\n");
                        continue;
                    }
                    
                    
                    int f_int = DASM6809.toNumber(f);
                    int s_int = DASM6809.toNumber(s);

                    if (f_int>256) 
                        f_int = f_int -65536;
                    if (s_int>256)
                        s_int = s_int -65536;
                    
                    double multiplier = 9.0/7.0;
                    double f_double = f_int * multiplier;
                    double s_double = s_int * multiplier;
                    
                    int f_int2 = (int)Math.round(f_double);
                    int s_int2 = (int)Math.round(s_double);
                    boolean overflow = false;
                    String overflowMessage ="";
                    if (f_int2>127) 
                    {
                        overflowMessage += "; f should be: "+String.format("%03X", (f_int2));
                        f_int2 = 127;
                        overflow = true;
                    }
                    if (f_int2<-128) 
                    {
                        overflowMessage += "; f should be: "+String.format("%03X", (f_int2));
                        f_int2 = -128;
                        overflow = true;
                    }
                    if (s_int2>127) 
                    {
                        overflowMessage += "; s should be: "+String.format("%03X", (s_int2));
                        s_int2 = 127;
                        overflow = true;
                    }
                    if (s_int2<-128) 
                    {
                        overflowMessage += "; s should be: "+String.format("%03X", (s_int2));
                        s_int2 = -128;
                        overflow = true;
                    }
                    if (overflow)
                        System.out.println("Overflow in line "+i+": "+line);
                    line = replaceFunctionCalls(line);
                    String f2 = "$"+String.format("%02X", (f_int2&0xff));
                    String s2 = "$01, $"+String.format("%02X", (s_int2&0xff));
                    
                    if ((f_int2&0xff)>127)
                    {
                        f2 = "-$"+String.format("%02X", Math.abs((f_int2&0xff)-256) );
                    }
                    if ((s_int2&0xff)>127)
                    {
                        f2 = "-$"+String.format("%02X", Math.abs((s_int2&0xff)-256) );
                    }
                    
                    line = de.malban.util.UtilityString.replaceFirst(line, f, f2);
                    line = de.malban.util.UtilityString.replaceFirst(line, s, s2);
                    if (overflow)
                    {
                        line = line+"\tOVERFLOW "+overflowMessage;
                    }
                    b.append(line).append("\n");
                }
                
                if (line .contains("lastDraw_"))
                {
                    inList = false;
                }
                if (line .contains("_sj)"))
                {
                    inList = false;
                }
                
            }
            
            
            de.malban.util.UtilityFiles.createTextFile(file1+".asm", b.toString());
            jLabel41.setText("Ok");
            jLabel41.setVisible(true);
            jLabel41.setForeground(Color.green);
        }
        catch (Throwable e)
        {
            jLabel41.setText("error");
            jLabel41.setVisible(true);
            jLabel41.setForeground(Color.red);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String text =  jTextAreahexInput.getText();
        String[] splitter = text.split(" ");
        StringBuffer b = new StringBuffer();
        int counter = 0;
        for (String s : splitter)
        {
            if (s.trim().length() == 0) continue;
            if (counter == 0)
            {
                b.append(" db $").append(s);
            }
            else
                b.append(", $").append(s);
            counter++;
            if (counter == 16)
            {
                b.append("\n");
                counter = 0;
            }
            
        }
        jTextAreadbOutput.setText(b.toString());
    }//GEN-LAST:event_jButton11ActionPerformed
    String replaceFunctionCalls(String line)
    {
        // todo
        return line;
    }
    
    // assuming line like:
    // 	db  $00,  $66, hi(SM_startDraw_d_y0), lo(SM_startDraw_d_y0)
    String getFirstValue(String line)
    {
        String ret = "";
        int p = line.indexOf("$");
        if (p>0)
        {
            if (line.charAt(p-1) == '-')
                return line.substring(p-1,p+3);
            return line.substring(p,p+3);
        }
        return "";
    }
    // minus one to get SIGN!
    String getSecondValue(String line)
    {
        String ret = "";
        int p = line.indexOf("$");
        if (p>0)
        {
            p = line.indexOf("$", p+1);
            if (p>0)
            {
                if (line.charAt(p-1) == '-')
                    return line.substring(p-1,p+3);
                return line.substring(p,p+3);
            }
        }
        return "";
    }
    
    String spacesUpTo(String to, int fillPos, String p1)
    {
        to = to +p1;
        int filler = to.split("\\\\").length-1;
        
        do
        {
            to = to +" ";
        } while (to.length()-filler<fillPos);
        return to;
    }
    String getLineLabel(String line)
    {
        if (line==null) return "";
        if (line.length()<=0) return "";
        String[] tokens = line.split(" ");
        if (tokens.length > 0)
            return tokens[0]; // might be "" - or label!
        return "";
    }
    
    String getLineOperand(String line)
    {
        if (line==null) return "";
        if (line.length()<=0) return "";

        if (line.contains(";"))
        {
            return line.substring(0, line.indexOf(";")).trim();
        }
        return line.trim();
    }

    String getLineComment(String line)
    {
        if (line==null) return "";
        if (line.length()<=0) return "";
        return line.trim();
    }
    
    String getLineMnemonic(String line)
    {
        if (line==null) return "";
        if (line.length()<=0) return "";
        String[] tokens = line.split(" ");
        if (tokens.length > 0)
            return tokens[0]; // might be "" - or label!
        return "";
    }


    ModalInternalFrame mDialog = null;
    public void setDialog(ModalInternalFrame dialog)
    {
        mDialog = dialog;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonFileSelect1;
    private javax.swing.JButton jButtonFileSelect10;
    private javax.swing.JButton jButtonFileSelect11;
    private javax.swing.JButton jButtonFileSelect12;
    private javax.swing.JButton jButtonFileSelect13;
    private javax.swing.JButton jButtonFileSelect2;
    private javax.swing.JButton jButtonFileSelect3;
    private javax.swing.JButton jButtonFileSelect4;
    private javax.swing.JButton jButtonFileSelect5;
    private javax.swing.JButton jButtonFileSelect6;
    private javax.swing.JButton jButtonFileSelect7;
    private javax.swing.JButton jButtonFileSelect8;
    private javax.swing.JButton jButtonFileSelect9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextAreadbOutput;
    private javax.swing.JTextArea jTextAreahexInput;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldstart;
    private javax.swing.JTextField jTextFieldstart1;
    private javax.swing.JTextField jTextFieldstart10;
    private javax.swing.JTextField jTextFieldstart11;
    private javax.swing.JTextField jTextFieldstart2;
    private javax.swing.JTextField jTextFieldstart3;
    private javax.swing.JTextField jTextFieldstart4;
    private javax.swing.JTextField jTextFieldstart5;
    private javax.swing.JTextField jTextFieldstart6;
    private javax.swing.JTextField jTextFieldstart7;
    private javax.swing.JTextField jTextFieldstart8;
    private javax.swing.JTextField jTextFieldstart9;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables




    public static int toNumber(String s)
    {
        s = s.toUpperCase();
        boolean minus = false;
        int radix = 10;
        int result = 0;
        if (s.startsWith("-"))
        {
            minus=true;
            s = s.substring(1);
        }
        if (s.startsWith("+"))
        {
            s = s.substring(1);
        }
        if (s.startsWith("$"))
        {
            radix = 16;
            s = s.substring(1);
        }
        if (s.startsWith("0X"))
        {
            s= s.substring(2);
            radix = 16;
        }
        try
        {
            result = Integer.parseInt(s, radix);
            if (minus) result *=-1;
            if (result != 65536)
                result = result &(0xffff);
        }
        catch (Throwable ex)
        {
            error = true;
            return Integer.MAX_VALUE;
        }
        return result;
    }
    public JButton getExitButton()
    {
        return jButton3;
    }
    void fileToBin(File f)
    {
        ArrayList<Byte> data = new ArrayList<Byte>();
        boolean isWord = false;
        Vector <String> lines = de.malban.util.UtilityString.readTextFileToString(f);
        
        for (String line: lines)
        {
            line = line.trim().toLowerCase();
            if (line.startsWith("db")) isWord = false;
            if (line.startsWith("fcb")) isWord = false;
            if (line.startsWith("dw")) isWord = true;
            if (line.startsWith("fdb")) isWord = true;
            if (line.trim().startsWith("*")) continue;
            line = de.malban.vide.assy.Comment.removeEndOfLineComment(line);
            line = de.malban.util.UtilityString.replaceWhiteSpaces(line.toUpperCase(), " ");
            line = de.malban.util.UtilityString.replace(line, ";", " ");
            line = de.malban.util.UtilityString.replace(line, ",", " ");
            line = de.malban.util.UtilityString.replace(line, ":", " ");
            line = de.malban.util.UtilityString.replace(line, "*", " ");
            line = de.malban.util.UtilityString.replace(line, "/", " ");
            line = de.malban.util.UtilityString.replace(line, "(", " ");
            line = de.malban.util.UtilityString.replace(line, ")", " ");
            line = de.malban.util.UtilityString.replace(line, "{", " ");
            line = de.malban.util.UtilityString.replace(line, "}", " ");
            line = de.malban.util.UtilityString.replace(line, "[", " ");
            line = de.malban.util.UtilityString.replace(line, "]", " ");
            line = de.malban.util.UtilityString.replace(line, "<", " ");
            line = de.malban.util.UtilityString.replace(line, ">", " ");
            while (true)
            {
                String orgText = line;
                line = de.malban.util.UtilityString.replace(line, "  ", " ");
                if (orgText.equals(line)) break;
            }
            line = de.malban.util.UtilityString.replace(line, "- ", "-");
            line = de.malban.util.UtilityString.replace(line, "+ ", "+");
 
            if (line.length() == 0) continue;
            // more or less text is now "one" line, with all separations turned to spaces
            String[] splits = line.split(" ");

            // now try every entity if it is a number,
            // if so add it to data!
            for (String s : splits)
            {
                if (s.length() == 0) continue;
                int number = toNumber(s.trim());
                if (number == Integer.MAX_VALUE) continue;

                if (isWord)
                {
                    data.add((byte)((number>>8)&0xff));
                }
                data.add((byte)(number&0xff));
            }        
        }
        if (data.size() == 0) return;
        byte[] binData = new byte[0]; 
        binData = toPrimitives(data.toArray(new Byte[0]));
        
        try
        {
            FileOutputStream output = new FileOutputStream(f.getAbsoluteFile()+".bin", true);
            try 
            {
               output.write(binData);
            } 
            finally 
            {
               output.close();
            }        
        }
        catch (Throwable e)
        {
        }
    }
    
    byte[] toPrimitives(Byte[] oBytes)
    {
        byte[] bytes = new byte[oBytes.length];

        for(int i = 0; i < oBytes.length; i++) {
            bytes[i] = oBytes[i];
        }

        return bytes;
    }    
    class HeuristicFile
    {
        String name;
        long length;
        byte[] data;
    }
    ArrayList<HeuristicFile> hFiles =new ArrayList<HeuristicFile>();
    void doHeuristicPreparation(File[] files)
    {
        for (File f : files)
        {
            HeuristicFile hf = new HeuristicFile();
            hFiles.add(hf);
            hf.name = f.getAbsolutePath();
            hf.length = f.length();
            try
            {
                hf.data = Files.readAllBytes(Paths.get(hf.name));            
            }
            catch (Throwable e)
            {
                e.printStackTrace();
            }
        }
    }
    public class HeuristicTableModel extends AbstractTableModel
    {
        public int getRowCount()
        {
            return hFiles.size();
        }
        public int getColumnCount()
        {
            return 3;
        }
        public Object getValueAt(int row, int col)
        {
            if (col == 0)
                return hFiles.get(row).name;
            if (col == 1)
                return hFiles.get(row).length;
            return "";
        }

        public String getColumnName(int column) {
            if (column == 0) return "Name";
            if (column == 1) return "Size";
            return "";
        }
        public Class<?> getColumnClass(int columnIndex) {
            if (columnIndex == 1) return Long.class;
            return String.class;
        }
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
        public int getColWidth(int col)
        {
            if (col == 0) return 200;
            if (col == 1) return 50;
            return 20;
        }
    }
    void buildHeuristic()
    {
        if (hFiles.size()<3)
        {
            jLabel27.setText("at least 3");
            jLabel27.setVisible(true);
            jLabel27.setForeground(Color.red);
            return;
        }
        HashMap[] memoryValues = new HashMap[65536];
        for (int i=0; i< 65536; i++)
        {
            memoryValues[i] = new HashMap<Byte, Integer>();
        }
        // collect data
        for (HeuristicFile hf : hFiles)
        {
            for (int i=0; i< 65536; i++)
            {
                if (hf.length<=i) break;
                byte b = hf.data[i];
                HashMap<Byte, Integer> m = memoryValues[i];
                
                Integer count = m.get(b);
                if (count == null) count = 0;
                count++;
                m.put(b, count);
            }
        }
        byte[] result = new byte[65536];
        int ambiguousCount = 0;
        for (int i=0; i< 65536; i++)
        {
            boolean ambiguos = false;
            byte mostLikely=0;
            int max = 0;

            HashMap<Byte, Integer> m = memoryValues[i];
            Set entries = m.entrySet();
            Iterator it = entries.iterator();
            while (it.hasNext())
            {
                Map.Entry entry = (Map.Entry) it.next();
                Byte mByte = (Byte)entry.getKey();
                Integer mCount = (Integer)entry.getValue();

                if (mCount==max)
                {
                    ambiguos = true;
                }
                if (mCount>max)
                {
                    ambiguos = false;
                    mostLikely = mByte;
                    max = mCount;
                }
            }
            if (ambiguos) ambiguousCount++;
            result[i] = mostLikely;
        }
        System.out.println("Ambiguous = "+ambiguousCount);
        

        try
        {
            FileOutputStream output = new FileOutputStream(hFiles.get(0).name+".h.bin", true);
            try 
            {
               output.write(result,0,65536);
            } 
            finally 
            {
               output.close();
            }        
        }
        catch (Throwable e)
        {
            jLabel24.setText("error");
            jLabel24.setVisible(true);
            jLabel24.setForeground(Color.red);
            return;
        }        
        
        jLabel24.setText("Ok");
        jLabel24.setVisible(true);
        jLabel24.setForeground(Color.green);
    }

}

