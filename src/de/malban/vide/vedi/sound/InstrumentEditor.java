/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.malban.vide.vedi.sound;

import de.malban.Global;
import de.malban.config.Configuration;
import de.malban.config.TinyLogInterface;
import de.malban.gui.CSAMainFrame;
import de.malban.gui.HotKey;
import de.malban.gui.Windowable;
import de.malban.gui.components.CSAView;
import de.malban.gui.panels.LogPanel;
import static de.malban.gui.panels.LogPanel.INFO;
import static de.malban.gui.panels.LogPanel.WARN;
import de.malban.sound.tinysound.Stream;
import de.malban.sound.tinysound.TinySound;
import static de.malban.util.syntax.entities.EntityDefinition.removeComment;
import de.malban.vide.assy.Asmj;
import de.malban.vide.dissy.DASM6809;
import de.malban.vide.vecx.E8910;
import de.malban.vide.vecx.VecXPanel;
import de.malban.vide.vedi.VediPanel;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author malban
 */
public class InstrumentEditor extends javax.swing.JPanel implements Windowable{

    LogPanel log = (LogPanel) Configuration.getConfiguration().getDebugEntity();

    Instrument currentInstrument = new Instrument();
    
    private int mClassSetting=0;
    private CSAView mParent = null;
    private javax.swing.JMenuItem mParentMenuItem = null;

    @Override
    public void closing()
    {
    }
    @Override public boolean isIcon()
    {
        CSAMainFrame frame = ((CSAMainFrame)Configuration.getConfiguration().getMainFrame());
        if (frame.getInternalFrame(this) == null) return false;
        return frame.getInternalFrame(this).isIcon();
    }
    @Override public void setIcon(boolean b)
    {
        CSAMainFrame frame = ((CSAMainFrame)Configuration.getConfiguration().getMainFrame());
        if (frame.getInternalFrame(this) == null) return;
        try
        {
            frame.getInternalFrame(this).setIcon(b);
        }
        catch (Throwable e){}
    }
    @Override
    public void setParentWindow(CSAView jpv)
    {
        mParent = jpv;
    }
    @Override
    public void setMenuItem(javax.swing.JMenuItem item)
    {
        mParentMenuItem = item;
        mParentMenuItem.setText("Instrument Editor");
    }
    @Override
    public javax.swing.JMenuItem getMenuItem()
    {
        return mParentMenuItem;
    }
    @Override
    public javax.swing.JPanel getPanel()
    {
        return this;
    }        
        /**
     * Creates new form InstrumentEditor
     */
    public InstrumentEditor(TinyLogInterface tl) {
        initComponents();
        if (Global.getOSName().toUpperCase().contains("MAC"))
        {
            HotKey.addMacDefaults(jTextArea1);
            HotKey.addMacDefaults(jTextField1a);
        }
        
        initComboBox(-1);
        initCurrentInstrument();
        
        
    }
    void initCurrentInstrument()
    {
        mClassSetting++;
        jTextField43.setText(currentInstrument.getADSRAsString());
        updateADSRFromOneTextfield();
        
        jTextField44.setText(currentInstrument.getTWANGAsString());
        updateTWANGFromOneTextfield();
        
        jTextField1a.setText(currentInstrument.name);
        mClassSetting--;
    }
    void initComboBox(int sel)
    {
        ArrayList<String> list = Instrument.getInstrumentList();
        mClassSetting++;
        jComboBox1.removeAllItems();
        for (String name: list)
        {
            jComboBox1.addItem(de.malban.util.UtilityString.replace(name.toLowerCase(), ".xml", ""));
        }
        jComboBox1.setSelectedIndex(sel);
        mClassSetting--;
        
    }
    void initComboBox(String nameSel)
    {
        ArrayList<String> list = Instrument.getInstrumentList();
        mClassSetting++;
        jComboBox1.removeAllItems();
        int selIndex = -1;
        int index = 0;
        for (String name: list)
        {
            String comboName = de.malban.util.UtilityString.replace(name.toLowerCase(), ".xml", "");
            jComboBox1.addItem(comboName);
            if (comboName.equals(nameSel.toLowerCase()))
                selIndex = index; 
            index++;
        }
        jComboBox1.setSelectedIndex(selIndex);
        mClassSetting--;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1a = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonNewYM = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2b = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jSlider5 = new javax.swing.JSlider();
        jSlider6 = new javax.swing.JSlider();
        jSlider17 = new javax.swing.JSlider();
        jSlider18 = new javax.swing.JSlider();
        jSlider19 = new javax.swing.JSlider();
        jSlider20 = new javax.swing.JSlider();
        jSlider21 = new javax.swing.JSlider();
        jSlider22 = new javax.swing.JSlider();
        jSlider23 = new javax.swing.JSlider();
        jSlider24 = new javax.swing.JSlider();
        jSlider25 = new javax.swing.JSlider();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jSlider7 = new javax.swing.JSlider();
        jSlider8 = new javax.swing.JSlider();
        jSlider9 = new javax.swing.JSlider();
        jSlider10 = new javax.swing.JSlider();
        jSlider11 = new javax.swing.JSlider();
        jSlider12 = new javax.swing.JSlider();
        jSlider13 = new javax.swing.JSlider();
        jSlider14 = new javax.swing.JSlider();
        jSlider15 = new javax.swing.JSlider();
        jSlider16 = new javax.swing.JSlider();
        jSlider26 = new javax.swing.JSlider();
        jSlider27 = new javax.swing.JSlider();
        jSlider28 = new javax.swing.JSlider();
        jSlider29 = new javax.swing.JSlider();
        jSlider30 = new javax.swing.JSlider();
        jSlider31 = new javax.swing.JSlider();
        jSlider32 = new javax.swing.JSlider();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jTextField36 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        jTextField39 = new javax.swing.JTextField();
        jTextField40 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jTextField42 = new javax.swing.JTextField();
        jTextField43 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField44 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jButtonAssemble = new javax.swing.JToggleButton();
        jButtonEditInVedi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setText("name");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1aFocusLost(evt);
            }
        });
        jTextField1a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1aActionPerformed(evt);
            }
        });

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/page_save.png"))); // NOI18N
        jButtonSave.setToolTipText("Save instrument");
        jButtonSave.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonNewYM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/new.png"))); // NOI18N
        jButtonNewYM.setToolTipText("new YM window");
        jButtonNewYM.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonNewYM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewYMActionPerformed(evt);
            }
        });

        jLabel2.setText("play: ");

        jTextField2b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2bActionPerformed(evt);
            }
        });
        jTextField2b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2bKeyTyped(evt);
            }
        });

        jSlider5.setMaximum(15);
        jSlider5.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider5.setSnapToTicks(true);
        jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider6.setMaximum(15);
        jSlider6.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider6.setSnapToTicks(true);
        jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider17.setMaximum(15);
        jSlider17.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider17.setSnapToTicks(true);
        jSlider17.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider18.setMaximum(15);
        jSlider18.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider18.setSnapToTicks(true);
        jSlider18.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider19.setMaximum(15);
        jSlider19.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider19.setSnapToTicks(true);
        jSlider19.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider20.setMaximum(15);
        jSlider20.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider20.setSnapToTicks(true);
        jSlider20.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider21.setMaximum(15);
        jSlider21.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider21.setSnapToTicks(true);
        jSlider21.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider22.setMaximum(15);
        jSlider22.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider22.setSnapToTicks(true);
        jSlider22.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider23.setMaximum(15);
        jSlider23.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider23.setSnapToTicks(true);
        jSlider23.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider24.setMaximum(15);
        jSlider24.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider24.setSnapToTicks(true);
        jSlider24.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider25.setMaximum(15);
        jSlider25.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider25.setSnapToTicks(true);
        jSlider25.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider1.setMaximum(15);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setSnapToTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider2.setMaximum(15);
        jSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider2.setSnapToTicks(true);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider3.setMaximum(15);
        jSlider3.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider3.setSnapToTicks(true);
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider4.setMaximum(15);
        jSlider4.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider4.setSnapToTicks(true);
        jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider7.setMaximum(15);
        jSlider7.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider7.setSnapToTicks(true);
        jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider8.setMaximum(15);
        jSlider8.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider8.setSnapToTicks(true);
        jSlider8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider9.setMaximum(15);
        jSlider9.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider9.setSnapToTicks(true);
        jSlider9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider10.setMaximum(15);
        jSlider10.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider10.setSnapToTicks(true);
        jSlider10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider11.setMaximum(15);
        jSlider11.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider11.setSnapToTicks(true);
        jSlider11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider12.setMaximum(15);
        jSlider12.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider12.setSnapToTicks(true);
        jSlider12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider13.setMaximum(15);
        jSlider13.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider13.setSnapToTicks(true);
        jSlider13.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider14.setMaximum(15);
        jSlider14.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider14.setSnapToTicks(true);
        jSlider14.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider15.setMaximum(15);
        jSlider15.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider15.setSnapToTicks(true);
        jSlider15.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider16.setMaximum(15);
        jSlider16.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider16.setSnapToTicks(true);
        jSlider16.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider26.setMaximum(15);
        jSlider26.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider26.setSnapToTicks(true);
        jSlider26.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider27.setMaximum(15);
        jSlider27.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider27.setSnapToTicks(true);
        jSlider27.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider28.setMaximum(15);
        jSlider28.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider28.setSnapToTicks(true);
        jSlider28.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider29.setMaximum(15);
        jSlider29.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider29.setSnapToTicks(true);
        jSlider29.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider30.setMaximum(15);
        jSlider30.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider30.setSnapToTicks(true);
        jSlider30.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider31.setMaximum(15);
        jSlider31.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider31.setSnapToTicks(true);
        jSlider31.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        jSlider32.setMaximum(15);
        jSlider32.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider32.setSnapToTicks(true);
        jSlider32.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider19StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSlider32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider11, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider12, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider13, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider14, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider15, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider16, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider17, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider18, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider19, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider20, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider21, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider22, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider23, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider24, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider25, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider26, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider27, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider28, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider29, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider30, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider31, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSlider32, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTextField1.setText("f");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField4.setText("f");
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField5.setText("f");
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField6.setText("f");
        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField7.setText("f");
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField8.setText("f");
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField9.setText("f");
        jTextField9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField10.setText("f");
        jTextField10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField11.setText("f");
        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField12.setText("f");
        jTextField12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField13.setText("f");
        jTextField13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField14.setText("f");
        jTextField14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField15.setText("f");
        jTextField15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField16.setText("f");
        jTextField16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField17.setText("f");
        jTextField17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField18.setText("f");
        jTextField18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField19.setText("f");
        jTextField19.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField20.setText("f");
        jTextField20.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField21.setText("f");
        jTextField21.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField22.setText("f");
        jTextField22.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField23.setText("f");
        jTextField23.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField24.setText("f");
        jTextField24.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField25.setText("f");
        jTextField25.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField26.setText("f");
        jTextField26.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField27.setText("f");
        jTextField27.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField28.setText("f");
        jTextField28.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField29.setText("f");
        jTextField29.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField30.setText("f");
        jTextField30.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField31.setText("f");
        jTextField31.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField32.setText("f");
        jTextField32.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField2.setText("f");
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField3.setText("f");
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jLabel7.setText("ADSR");

        jLabel8.setText("TWANG");

        jTextField35.setText("00");
        jTextField35.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField36.setText("00");
        jTextField36.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField37.setText("00");
        jTextField37.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField38.setText("00");
        jTextField38.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField39.setText("00");
        jTextField39.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField40.setText("00");
        jTextField40.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField41.setText("00");
        jTextField41.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField42.setText("00");
        jTextField42.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField42FocusLost(evt);
            }
        });
        jTextField42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField42ActionPerformed(evt);
            }
        });

        jTextField43.setText("$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00");
        jTextField43.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField43FocusLost(evt);
            }
        });
        jTextField43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField43ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("noisy");

        jTextField44.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField44FocusLost(evt);
            }
        });
        jTextField44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField44ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(" 2,12                         \n 0,12                         \n 2,12                         \n 0,12                         \n 2,6                          \n 0,6 \n 2,6 \n 0,6 \n 2,6 \n 0,6 \n 2,12 \n 0,12                         \n 2,12 \n 0,12 \n 2,12 \n 0,12                         \n 2,6 \n 0,6 \n 2,6 \n 0,6 \n 2,6 \n 0,6 \n 2,6                          \n 0,6 \n 2,12 \n 0,12 \n 128+2,128+26,26-12, 12       \n 128+0,128+31,31-12, 12       \n 128+2,128+31,31-12, 12       \n 128+0,128+33,33-12, 12       \n 128+2,128+35,35-12, 12 \n 128+0,128+31,31-12, 12       \n 128+2,128+35,35-12, 12 \n 128+0,128+33,33-12, 12 \n 128+2,128+26,26-12, 12 \n 128+0,128+31,31-12, 12       \n 128+2,128+31,31-12, 12 \n 128+0,128+33,33-12, 12 \n 128+2,128+35,35-12, 12 \n 128+0,128+31,31-12, 12       \n 2,12 \n 128+0,128+30,30-12, 12 \n 128+2,128+26,26-12, 12 \n 128+0,128+31,31-12, 12       \n 128+2,128+31,31-12, 12 \n 128+0,128+33,33-12, 12 \n 128+2,128+35,35-12, 12 \n 128+0,128+36,36-12, 12       \n 128+2,128+35,35-12, 12 \n 128+0,128+33,33-12, 12 \n 128+2,128+31,31-12, 12 \n 128+0,128+30,30-12, 12       \n 128+2,128+26,26-12, 12 \n 128+0,128+28,28-12, 12 \n 128+2,128+30,30-12, 12 \n 128+0,128+31,31-12, 12       \n 2, 12 \n 128+0,128+31,31-12, 12 \n 2, 12 \n 128+0,128+28,28-12, 18       \n 128+30,30-12, 06 \n 128+2,128+28,28-12, 12 \n 128+0,128+26,26-12, 12 \n 128+2,128+28,28-12, 12 \n 128+0,128+30,30-12, 12 \n 128+2,128+31,31-12, 12 \n 0, 12 \n 128+0,128+26,26-12, 18 \n 128+28,28-12, 06 \n 128+2,128+26,26-12, 12 \n 128+0,128+24,24-12, 12 \n 128+2,128+23,23-12, 12 \n 0, 12 \n 128+2,128+26,26-12, 12 \n 0, 12 \n 128+2,128+28,28-12, 18 \n 128+30,30-12, 06 \n 128+0,128+28,28-12, 12 \n 128+2,128+26,26-12, 12 \n 128+0,128+28,28-12, 12 \n 128+2,128+30,30-12, 12 \n 128+0,128+31,31-12, 12 \n 128+2,128+28,28-12, 12 \n 128+0,128+26,26-12, 12 \n 128+2,128+31,31-12, 12 \n 128+0,128+30,30-12, 12 \n 128+2,128+33,33-12, 12 \n 128+0,128+31,31-12, 12 \n 2, 12 \n 128+0,128+31,31-12, 12 \n 2, 12    ");
        jScrollPane3.setViewportView(jTextArea1);

        jLabel22.setText("Music data Input");

        jButtonAssemble.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/control_play_blue.png"))); // NOI18N
        jButtonAssemble.setToolTipText("Animates through all images, animation is looped. Given delay is taken.");
        jButtonAssemble.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonAssemble.setPreferredSize(new java.awt.Dimension(21, 21));
        jButtonAssemble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAssembleActionPerformed(evt);
            }
        });

        jButtonEditInVedi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/page_edit.png"))); // NOI18N
        jButtonEditInVedi.setToolTipText("edit output in vedi");
        jButtonEditInVedi.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonEditInVedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditInVediActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Geneva", 2, 11)); // NOI18N
        jLabel4.setText("Enter notes in Vectrex music format - and hit \"play\" to listen.");

        jLabel5.setFont(new java.awt.Font("Geneva", 2, 11)); // NOI18N
        jLabel5.setText("Hex, bin, decimal, +/- are allowed!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField43, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE))
                        .addContainerGap(64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonAssemble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonEditInVedi))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField1a)
                                            .addComponent(jComboBox1, 0, 151, Short.MAX_VALUE))
                                        .addGap(12, 12, 12)
                                        .addComponent(jButtonSave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonNewYM)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addGap(4, 4, 4)
                                        .addComponent(jTextField2b, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonSave)
                    .addComponent(jButtonNewYM)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2b, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1a, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonEditInVedi)
                        .addComponent(jButtonAssemble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        readAll();
        if (currentInstrument.name.length()==0) 
        {
            log.addLog("Instrument not saved, no name given!", WARN);
            return;
        }
        String path = Global.mainPathPrefix+"xml"+File.separator+"instruments"+File.separator+currentInstrument.name+".xml";
        currentInstrument.saveAsXML(path);
        initComboBox(currentInstrument.name);
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonNewYMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewYMActionPerformed
        currentInstrument = new Instrument();
        initCurrentInstrument();
    }//GEN-LAST:event_jButtonNewYMActionPerformed

    private void jTextField43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField43ActionPerformed
        if (mClassSetting>0) return;
        updateADSRFromOneTextfield();
    }//GEN-LAST:event_jTextField43ActionPerformed

    private void jSlider19StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider19StateChanged
        if (mClassSetting>0) return;
        updateFromSliders();
    }//GEN-LAST:event_jSlider19StateChanged

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        if (mClassSetting>0) return;
        updateADSRFromTextfield();
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField2bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2bActionPerformed
        if (mClassSetting>0) return;
        mClassSetting++;
        // TODO add your handling code here:
        mClassSetting--;
    }//GEN-LAST:event_jTextField2bActionPerformed

    private void jTextField13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusLost
        if (mClassSetting>0) return;
        updateADSRFromTextfield();
    }//GEN-LAST:event_jTextField13FocusLost

    private void jTextField2bKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2bKeyTyped
        if (mClassSetting>0) return;
        note = ""+evt.getKeyChar();
        startYM(buildPlayBuffer());
    }//GEN-LAST:event_jTextField2bKeyTyped

    private void jTextField44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField44ActionPerformed
        if (mClassSetting>0) return;
        updateTWANGFromOneTextfield();
    }//GEN-LAST:event_jTextField44ActionPerformed

    private void jTextField42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField42ActionPerformed
        if (mClassSetting>0) return;
        updateTWANGFromTextfield();
    }//GEN-LAST:event_jTextField42ActionPerformed

    private void jTextField42FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField42FocusLost
        if (mClassSetting>0) return;
        updateTWANGFromTextfield();
    }//GEN-LAST:event_jTextField42FocusLost

    private void jTextField44FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField44FocusLost
        if (mClassSetting>0) return;
        updateTWANGFromOneTextfield();
    }//GEN-LAST:event_jTextField44FocusLost

    private void jTextField1aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1aActionPerformed
        currentInstrument.name = jTextField1a.getText();
    }//GEN-LAST:event_jTextField1aActionPerformed

    private void jTextField1aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1aFocusLost
        currentInstrument.name = jTextField1a.getText();
    }//GEN-LAST:event_jTextField1aFocusLost

    private void jTextField43FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField43FocusLost
        if (mClassSetting>0) return;
        updateADSRFromOneTextfield();
    }//GEN-LAST:event_jTextField43FocusLost

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (mClassSetting>0) return;
        if (jComboBox1.getSelectedIndex() == -1) return;
        String name = jComboBox1.getSelectedItem().toString();
        currentInstrument = Instrument.getInstrument(name);
        initCurrentInstrument();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    String getNotesInterpretation()
    {
        String t = jTextArea1.getText();
        t = removeComment(t, ";");
        t = de.malban.util.UtilityString.replace(t, "\n", ",");
        t = de.malban.util.UtilityString.replaceWhiteSpaces(t, " ");
        t = de.malban.util.UtilityString.replace(t, ";", ",");
        t = de.malban.util.UtilityString.replace(t, ",", " , ");
        t = de.malban.util.UtilityString.replace(t, "+", " + ");
        t = de.malban.util.UtilityString.replace(t, "-", " - ");
        t = de.malban.util.UtilityString.replace(t, "*", " * ");
        t = de.malban.util.UtilityString.replace(t, "/", " / ");
        t = de.malban.util.UtilityString.replace(t, "  ", " ");
        ArrayList<Integer> values = new ArrayList<Integer>();
        String[] tokens = t.split(" ");

        
        int OP_NONE = 0;
        int OP_PLUS = 1;
        int OP_MINUS = 2;
        int OP_MUL = 3;
        int OP_DIV = 4;
        
        int currentValue = 0;
        int currentOP = OP_NONE;
        boolean valueDone = true;
        for (String v: tokens)
        {
            if (v == null) continue;
            if (v.trim().length() == 0) continue;

            int vt = toNumber(v, false);
            if (vt == Integer.MAX_VALUE)
            {
                currentOP = OP_NONE;
                if (v.equals(",")) valueDone = true;
                if (valueDone) continue;
                // not a number
                if (v.equals("+")) currentOP = OP_PLUS;
                if (v.equals("-")) currentOP = OP_MINUS;
                if (v.equals("*")) currentOP = OP_MUL;
                if (v.equals("/")) currentOP = OP_DIV;
                // else ignore value alltogether
            }
            else if (currentOP == OP_NONE)
            {
                valueDone = false;
                values.add(vt);
            }
            else if (currentOP == OP_PLUS)
            {
                int oldVal = values.remove(values.size()-1);
                values.add(vt+oldVal);
            }
            else if (currentOP == OP_MINUS)
            {
                int oldVal = values.remove(values.size()-1);
                values.add(oldVal-vt);
            }
            else if (currentOP == OP_MUL)
            {
                int oldVal = values.remove(values.size()-1);
                values.add(oldVal*vt);
            }
            else if (currentOP == OP_DIV)
            {
                int oldVal = values.remove(values.size()-1);
                values.add(oldVal/vt);
            }
        }
        
        StringBuilder s = new StringBuilder();
        boolean mustStart = true;
        int lastVal = 128;
        for (int i: values)
        {
            if (mustStart)
            {
                s.append(" db $").append(String.format("%02X",i));
                mustStart = false;
                lastVal = 128;
            }
            else
            {
                s.append(", $"+String.format("%02X",i));
            }
            if (((lastVal & 0x80) != 0x80) && ((i & 0x80) != 0x80))
            {
                mustStart = true;
                s.append("\n");
            }
            lastVal = i;
        }
        s.append(" db $01, $ff\n"); // end marker
        
        return s.toString();
    }
    
    public static int toNumber(String s, boolean largeAllowed)
    {
        s = de.malban.util.UtilityString.replace(s, "$$","$");
        s = s.toUpperCase();
        boolean minus = false;
        int radix = 10;
        int result = Integer.MAX_VALUE;
        if (s.startsWith("-"))
        {
            minus=true;
            s = s.substring(1);
        }
        if (s.startsWith("+"))
        {
            s = s.substring(1);
        }
        if (s.startsWith("$"))
        {
            radix = 16;
            s = s.substring(1);
        }
        if (s.startsWith("%"))
        {
            radix = 2;
            s = s.substring(1);
        }
        if (s.startsWith("b"))
        {
            radix = 2;
            s = s.substring(1);
        }
        
        if (s.startsWith("0X"))
        {
            s= s.substring(2);
            radix = 16;
        }
        try
        {
            result = Integer.parseInt(s, radix);
            if (minus) result *=-1;
            if (!largeAllowed)
                result = result &(0xffff);
        }
        catch (Throwable ex)
        {
            
        }
        return result;
    }    
    
    String getADSRInterpretation()
    {
        String ret = "adsr_table:\n";
        ret += " db "+jTextField43.getText()+"\n";
        ret += "twang_table:\n";
        ret += " db ";
        ret += " $"+jTextField35.getText();
        ret += ", $"+jTextField36.getText();
        ret += ", $"+jTextField37.getText();
        ret += ", $"+jTextField38.getText();
        ret += ", $"+jTextField39.getText();
        ret += ", $"+jTextField40.getText();
        ret += ", $"+jTextField41.getText();
        ret += ", $"+jTextField42.getText();
        ret += "\n";
        
        return ret;
    }
    String getADSRInterpretationPointer()
    {
        String ret = " dw adsr_table, twang_table\n";
        return ret;
    }
    
    String getProg()
    {
        String notes = getNotesInterpretation();
        String adsr = getADSRInterpretation();
        String adsrPointer = getADSRInterpretationPointer();

        Path template = Paths.get(Global.mainPathPrefix, "template", "notePlayer.i");
        String main = de.malban.util.UtilityString.readTextFileToOneString(new File(template.toString()));
        main += adsr+"\n";
        main += "\nadsr_notes:\n";
        main += adsrPointer+"\n";
        main += "\nnotes:\n";
        main += notes+"\n";
        return main;
    }
    private void jButtonAssembleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAssembleActionPerformed

        
        String filename = Global.mainPathPrefix+"tmp"+File.separator+"musictmp.asm";
        de.malban.util.UtilityFiles.createTextFile(filename, getProg());
        startASM(filename);
        
        
    }//GEN-LAST:event_jButtonAssembleActionPerformed

    private void jButtonEditInVediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditInVediActionPerformed
        
        CSAMainFrame frame = (CSAMainFrame)Configuration.getConfiguration().getMainFrame();
        VediPanel p = new VediPanel(false);        
        p.setTreeVisible(false);
        
        frame.addAsWindow(p, 1024, 768, VediPanel.SID);
        String filename = Global.mainPathPrefix+"tmp"+File.separator+"musictmp.asm";
        de.malban.util.UtilityFiles.createTextFile(filename, getProg());

                
        p.addTempEditFile(filename);
    }//GEN-LAST:event_jButtonEditInVediActionPerformed

    int currentHz = 50;
    int compareMilli = 1000/50;
    
    final E8910 e8910 = new E8910();    

    void startYM(final byte[][] out_buf )
    {
        if (out_buf==null) return;
        final E8910 e8910 = new E8910();    

        e8910.e8910_init_sound();
        // setupPSG once with a complete reigster set!
        // if not every register is setup once,
        // the emulation may decide to do an endless loop!

        Thread three = new Thread("Play YM") 
        {
            public void run() 
            {

                int ympos = 0;
                ympos = 0;
                for (int r=0; r< 15; r++)
                {
                    byte value = out_buf[r][ympos];
                    byte poker = value;
                    int i=r;
                    if ((i==1)||(i==3)||(i==5)) poker   &= 0x0f;
                    if ((i==6) ) poker                  &= 0x1f;
                    if  (i==7) poker                    &= 0x3f;
                    if ((i==8)||(i==9)||(i==10)) poker  &= 0x0f;
                    e8910.e8910_write(r,  poker&0xff);
                }                
                currentHz = 50;
                compareMilli = 1000/currentHz;

                
                long lastTime = 0;
                while (ympos<32)
                {
                    long endTime = System.nanoTime();
                    long durationMilli = (endTime - lastTime)/1000000;
                    if (durationMilli>=compareMilli)
                    {
                        for (int r=0; r< 15; r++)
                        {
                            byte value = out_buf[r][ympos];
                            if ((r == 13) && (value&0xff) == 0xff) 
                                continue;
                
                            byte poker = value;
                            int i=r;
                            if ((i==1)||(i==3)||(i==5))
                                poker &= 1+2+4+8;
                            if ((i==6) )
                                poker &= 1+2+4+8+16;

                            if (i==7)
                                poker &= 1+2+4+8+16+32;
                            // for vectrex
                            if ((i==8)||(i==9)||(i==10))
                                poker &= 1+2+4+8;
                            
                            e8910.e8910_write(r,  poker&0xff);
                        }
                        ympos+=1;
                        lastTime = endTime;
                        
                        e8910.updateSound();
                    }
                    try
                    {
                        Thread.sleep(1);
                    }
                    catch (Throwable e)
                    {
                    }
                }
                int f = 0;
                while (f != 30)
                {
                    try
                    {
                        Thread.sleep(10);
                    }
                    catch (Throwable e)
                    {
                    }
                    e8910.updateSound();
                    f++;
                }
                e8910.e8910_done_sound();
            }  
        };
        three.start();           
    }    
    
    JInternalFrame modelDialog;
    public static boolean showInstrumentPanel(TinyLogInterface tl)
    {
        return false;
    }        
    public static void showInstrumentPanelNoModal(TinyLogInterface tl)
    {
        JFrame frame = Configuration.getConfiguration().getMainFrame();
        InstrumentEditor panel = new InstrumentEditor(tl);
        ((CSAMainFrame)Configuration.getConfiguration().getMainFrame()).addAsWindow(panel,  919, 700, "Instrument Editor");
    }        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jButtonAssemble;
    private javax.swing.JButton jButtonEditInVedi;
    private javax.swing.JButton jButtonNewYM;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider10;
    private javax.swing.JSlider jSlider11;
    private javax.swing.JSlider jSlider12;
    private javax.swing.JSlider jSlider13;
    private javax.swing.JSlider jSlider14;
    private javax.swing.JSlider jSlider15;
    private javax.swing.JSlider jSlider16;
    private javax.swing.JSlider jSlider17;
    private javax.swing.JSlider jSlider18;
    private javax.swing.JSlider jSlider19;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider20;
    private javax.swing.JSlider jSlider21;
    private javax.swing.JSlider jSlider22;
    private javax.swing.JSlider jSlider23;
    private javax.swing.JSlider jSlider24;
    private javax.swing.JSlider jSlider25;
    private javax.swing.JSlider jSlider26;
    private javax.swing.JSlider jSlider27;
    private javax.swing.JSlider jSlider28;
    private javax.swing.JSlider jSlider29;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider30;
    private javax.swing.JSlider jSlider31;
    private javax.swing.JSlider jSlider32;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JSlider jSlider6;
    private javax.swing.JSlider jSlider7;
    private javax.swing.JSlider jSlider8;
    private javax.swing.JSlider jSlider9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField1a;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField2b;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    
    int getTwang(int pos)
    {
        int t = 0;
        if (pos == 0) t = DASM6809.toNumber("$"+jTextField35.getText());
        if (pos == 1) t = DASM6809.toNumber("$"+jTextField36.getText());
        if (pos == 2) t = DASM6809.toNumber("$"+jTextField37.getText());
        if (pos == 3) t = DASM6809.toNumber("$"+jTextField38.getText());
        if (pos == 4) t = DASM6809.toNumber("$"+jTextField39.getText());
        if (pos == 5) t = DASM6809.toNumber("$"+jTextField40.getText());
        if (pos == 6) t = DASM6809.toNumber("$"+jTextField41.getText());
        if (pos == 7) t = DASM6809.toNumber("$"+jTextField42.getText());
        t = t &0xff;
        if (t>127) t = t -256;
        return t;
    }
    int getAmplitude(int pos)
    {
        pos++;
        if (pos==1) return jSlider1.getValue();
        if (pos==2) return jSlider2.getValue();
        if (pos==3) return jSlider3.getValue();
        if (pos==4) return jSlider4.getValue();
        if (pos==5) return jSlider5.getValue();
        if (pos==6) return jSlider6.getValue();
        if (pos==7) return jSlider7.getValue();
        if (pos==8) return jSlider8.getValue();
        if (pos==9) return jSlider9.getValue();
        if (pos==10) return jSlider10.getValue();
        if (pos==11) return jSlider11.getValue();
        if (pos==12) return jSlider12.getValue();
        if (pos==13) return jSlider13.getValue();
        if (pos==14) return jSlider14.getValue();
        if (pos==15) return jSlider15.getValue();
        if (pos==16) return jSlider16.getValue();
        if (pos==17) return jSlider17.getValue();
        if (pos==18) return jSlider18.getValue();
        if (pos==19) return jSlider19.getValue();
        if (pos==20) return jSlider20.getValue();
        if (pos==21) return jSlider21.getValue();
        if (pos==22) return jSlider22.getValue();
        if (pos==23) return jSlider23.getValue();
        if (pos==24) return jSlider24.getValue();
        if (pos==25) return jSlider25.getValue();
        if (pos==26) return jSlider26.getValue();
        if (pos==27) return jSlider27.getValue();
        if (pos==28) return jSlider28.getValue();
        if (pos==29) return jSlider29.getValue();
        if (pos==30) return jSlider30.getValue();
        if (pos==31) return jSlider31.getValue();
        if (pos==32) return jSlider32.getValue();
        return 0;
    }
    void updateFromSliders()
    {
        mClassSetting++;
        jTextField1.setText(String.format("%01X", jSlider1.getValue()));
        jTextField2.setText(String.format("%01X", jSlider2.getValue()));
        jTextField3.setText(String.format("%01X", jSlider3.getValue()));
        jTextField4.setText(String.format("%01X", jSlider4.getValue()));
        jTextField5.setText(String.format("%01X", jSlider5.getValue()));
        jTextField6.setText(String.format("%01X", jSlider6.getValue()));
        jTextField7.setText(String.format("%01X", jSlider7.getValue()));
        jTextField8.setText(String.format("%01X", jSlider8.getValue()));
        jTextField9.setText(String.format("%01X", jSlider9.getValue()));
        jTextField10.setText(String.format("%01X", jSlider10.getValue()));
        jTextField11.setText(String.format("%01X", jSlider11.getValue()));
        jTextField12.setText(String.format("%01X", jSlider12.getValue()));
        jTextField13.setText(String.format("%01X", jSlider13.getValue()));
        jTextField14.setText(String.format("%01X", jSlider14.getValue()));
        jTextField15.setText(String.format("%01X", jSlider15.getValue()));
        jTextField16.setText(String.format("%01X", jSlider16.getValue()));
        jTextField17.setText(String.format("%01X", jSlider17.getValue()));
        jTextField18.setText(String.format("%01X", jSlider18.getValue()));
        jTextField19.setText(String.format("%01X", jSlider19.getValue()));
        jTextField20.setText(String.format("%01X", jSlider20.getValue()));
        jTextField21.setText(String.format("%01X", jSlider21.getValue()));
        jTextField22.setText(String.format("%01X", jSlider22.getValue()));
        jTextField23.setText(String.format("%01X", jSlider23.getValue()));
        jTextField24.setText(String.format("%01X", jSlider24.getValue()));
        jTextField25.setText(String.format("%01X", jSlider25.getValue()));
        jTextField26.setText(String.format("%01X", jSlider26.getValue()));
        jTextField27.setText(String.format("%01X", jSlider27.getValue()));
        jTextField28.setText(String.format("%01X", jSlider28.getValue()));
        jTextField29.setText(String.format("%01X", jSlider29.getValue()));
        jTextField30.setText(String.format("%01X", jSlider30.getValue()));
        jTextField31.setText(String.format("%01X", jSlider31.getValue()));
        jTextField32.setText(String.format("%01X", jSlider32.getValue()));
        StringBuilder s = new StringBuilder();
        s.append("$").append(jTextField1.getText()).append(jTextField2.getText()).append(", ");
        s.append("$").append(jTextField3.getText()).append(jTextField4.getText()).append(", ");
        s.append("$").append(jTextField5.getText()).append(jTextField6.getText()).append(", ");
        s.append("$").append(jTextField7.getText()).append(jTextField8.getText()).append(", ");
        s.append("$").append(jTextField9.getText()).append(jTextField10.getText()).append(", ");
        s.append("$").append(jTextField11.getText()).append(jTextField12.getText()).append(", ");
        s.append("$").append(jTextField13.getText()).append(jTextField14.getText()).append(", ");
        s.append("$").append(jTextField15.getText()).append(jTextField16.getText()).append(", ");
        s.append("$").append(jTextField17.getText()).append(jTextField18.getText()).append(", ");
        s.append("$").append(jTextField19.getText()).append(jTextField20.getText()).append(", ");
        s.append("$").append(jTextField21.getText()).append(jTextField22.getText()).append(", ");
        s.append("$").append(jTextField23.getText()).append(jTextField24.getText()).append(", ");
        s.append("$").append(jTextField25.getText()).append(jTextField26.getText()).append(", ");
        s.append("$").append(jTextField27.getText()).append(jTextField28.getText()).append(", ");
        s.append("$").append(jTextField29.getText()).append(jTextField30.getText()).append(", ");
        s.append("$").append(jTextField31.getText()).append(jTextField32.getText()).append(" ");
        jTextField43.setText(s.toString());
        mClassSetting--;
    }   
    
    void updateTWANGFromTextfield()
    {
        mClassSetting++;
        StringBuilder s = new StringBuilder();
        s.append("$").append(jTextField35.getText()).append(", ");
        s.append("$").append(jTextField36.getText()).append(", ");
        s.append("$").append(jTextField37.getText()).append(", ");
        s.append("$").append(jTextField38.getText()).append(", ");
        s.append("$").append(jTextField39.getText()).append(", ");
        s.append("$").append(jTextField40.getText()).append(", ");
        s.append("$").append(jTextField41.getText()).append(", ");
        s.append("$").append(jTextField42.getText()).append("");
        jTextField44.setText(s.toString());
        mClassSetting--;
    }
    void updateADSRFromTextfield()
    {
        mClassSetting++;
        
        jSlider1.setValue(DASM6809.toNumber("$"+jTextField1.getText()));
        jSlider2.setValue(DASM6809.toNumber("$"+jTextField2.getText()));
        jSlider3.setValue(DASM6809.toNumber("$"+jTextField3.getText()));
        jSlider4.setValue(DASM6809.toNumber("$"+jTextField4.getText()));
        jSlider5.setValue(DASM6809.toNumber("$"+jTextField5.getText()));
        jSlider6.setValue(DASM6809.toNumber("$"+jTextField6.getText()));
        jSlider7.setValue(DASM6809.toNumber("$"+jTextField7.getText()));
        jSlider8.setValue(DASM6809.toNumber("$"+jTextField8.getText()));
        jSlider9.setValue(DASM6809.toNumber("$"+jTextField9.getText()));
        jSlider10.setValue(DASM6809.toNumber("$"+jTextField10.getText()));
        jSlider11.setValue(DASM6809.toNumber("$"+jTextField11.getText()));
        jSlider12.setValue(DASM6809.toNumber("$"+jTextField12.getText()));
        jSlider13.setValue(DASM6809.toNumber("$"+jTextField13.getText()));
        jSlider14.setValue(DASM6809.toNumber("$"+jTextField14.getText()));
        jSlider15.setValue(DASM6809.toNumber("$"+jTextField15.getText()));
        jSlider16.setValue(DASM6809.toNumber("$"+jTextField16.getText()));
        jSlider17.setValue(DASM6809.toNumber("$"+jTextField17.getText()));
        jSlider18.setValue(DASM6809.toNumber("$"+jTextField18.getText()));
        jSlider19.setValue(DASM6809.toNumber("$"+jTextField19.getText()));
        jSlider20.setValue(DASM6809.toNumber("$"+jTextField20.getText()));
        jSlider21.setValue(DASM6809.toNumber("$"+jTextField21.getText()));
        jSlider22.setValue(DASM6809.toNumber("$"+jTextField22.getText()));
        jSlider23.setValue(DASM6809.toNumber("$"+jTextField23.getText()));
        jSlider24.setValue(DASM6809.toNumber("$"+jTextField24.getText()));
        jSlider25.setValue(DASM6809.toNumber("$"+jTextField25.getText()));
        jSlider26.setValue(DASM6809.toNumber("$"+jTextField26.getText()));
        jSlider27.setValue(DASM6809.toNumber("$"+jTextField27.getText()));
        jSlider28.setValue(DASM6809.toNumber("$"+jTextField28.getText()));
        jSlider29.setValue(DASM6809.toNumber("$"+jTextField29.getText()));
        jSlider30.setValue(DASM6809.toNumber("$"+jTextField30.getText()));
        jSlider31.setValue(DASM6809.toNumber("$"+jTextField31.getText()));
        jSlider32.setValue(DASM6809.toNumber("$"+jTextField32.getText()));
        StringBuilder s = new StringBuilder();
        s.append("$").append(jTextField1.getText()).append(jTextField2.getText()).append(", ");
        s.append("$").append(jTextField3.getText()).append(jTextField4.getText()).append(", ");
        s.append("$").append(jTextField5.getText()).append(jTextField6.getText()).append(", ");
        s.append("$").append(jTextField7.getText()).append(jTextField8.getText()).append(", ");
        s.append("$").append(jTextField9.getText()).append(jTextField10.getText()).append(", ");
        s.append("$").append(jTextField11.getText()).append(jTextField12.getText()).append(", ");
        s.append("$").append(jTextField13.getText()).append(jTextField14.getText()).append(", ");
        s.append("$").append(jTextField15.getText()).append(jTextField16.getText()).append(", ");
        s.append("$").append(jTextField17.getText()).append(jTextField18.getText()).append(", ");
        s.append("$").append(jTextField19.getText()).append(jTextField20.getText()).append(", ");
        s.append("$").append(jTextField21.getText()).append(jTextField22.getText()).append(", ");
        s.append("$").append(jTextField23.getText()).append(jTextField24.getText()).append(", ");
        s.append("$").append(jTextField25.getText()).append(jTextField26.getText()).append(", ");
        s.append("$").append(jTextField27.getText()).append(jTextField28.getText()).append(", ");
        s.append("$").append(jTextField29.getText()).append(jTextField30.getText()).append(", ");
        s.append("$").append(jTextField31.getText()).append(jTextField32.getText()).append(" ");
        jTextField43.setText(s.toString());
        mClassSetting--;
    }
    void updateTWANGFromOneTextfield()
    {
        mClassSetting++;
        String[] numbers = jTextField44.getText().split(",");
        int count =0 ;
        for (int i=0; i<numbers.length; i++)
        {
            String ss = numbers[i];
            ss = ss.trim();
            if (ss.length()<=0) continue;
            int value= DASM6809.toNumber(ss)& 0xff;
            
            count++;
            if (count == 1) {jTextField35.setText(String.format("%02X",value));};
            if (count == 2) {jTextField36.setText(String.format("%02X",value));};
            if (count == 3) {jTextField37.setText(String.format("%02X",value));};
            if (count == 4) {jTextField38.setText(String.format("%02X",value));};
            if (count == 5) {jTextField39.setText(String.format("%02X",value));};
            if (count == 6) {jTextField40.setText(String.format("%02X",value));};
            if (count == 7) {jTextField41.setText(String.format("%02X",value));};
            if (count == 8) {jTextField42.setText(String.format("%02X",value));};
        }
        mClassSetting--;
    }        
    void updateADSRFromOneTextfield()
    {
        mClassSetting++;
        String[] numbers = jTextField43.getText().split(",");
        int count =0 ;
        for (int i=0; i<numbers.length; i++)
        {
            String ss = numbers[i];
            ss = ss.trim();
            if (ss.length()<=0) continue;
            int value= DASM6809.toNumber(ss);
            if (de.malban.util.UtilityString.replace(ss, "$", "").length()<=2)
            {
                count++;
                if (count == 1) {jSlider1.setValue(value>>4);jSlider2.setValue(value&0xf);continue;}
                if (count == 2) {jSlider3.setValue(value>>4);jSlider4.setValue(value&0xf);continue;}
                if (count == 3) {jSlider5.setValue(value>>4);jSlider6.setValue(value&0xf);continue;}
                if (count == 4) {jSlider7.setValue(value>>4);jSlider8.setValue(value&0xf);continue;}
                if (count == 5) {jSlider9.setValue(value>>4);jSlider10.setValue(value&0xf);continue;}
                if (count == 6) {jSlider11.setValue(value>>4);jSlider12.setValue(value&0xf);continue;}
                if (count == 7) {jSlider13.setValue(value>>4);jSlider14.setValue(value&0xf);continue;}
                if (count == 8) {jSlider15.setValue(value>>4);jSlider16.setValue(value&0xf);continue;}
                if (count == 9) {jSlider17.setValue(value>>4);jSlider18.setValue(value&0xf);continue;}
                if (count == 10) {jSlider19.setValue(value>>4);jSlider20.setValue(value&0xf);continue;}
                if (count == 11) {jSlider21.setValue(value>>4);jSlider22.setValue(value&0xf);continue;}
                if (count == 12) {jSlider23.setValue(value>>4);jSlider24.setValue(value&0xf);continue;}
                if (count == 13) {jSlider25.setValue(value>>4);jSlider26.setValue(value&0xf);continue;}
                if (count == 14) {jSlider27.setValue(value>>4);jSlider28.setValue(value&0xf);continue;}
                if (count == 15) {jSlider29.setValue(value>>4);jSlider30.setValue(value&0xf);continue;}
                if (count == 16) {jSlider31.setValue(value>>4);jSlider32.setValue(value&0xf);continue;}
            }
            else
            {
                int val3 = (value>>0) & 0xf;
                int val2 = (value>>4) & 0xf;
                int val1 = (value>>8) & 0xf;
                int val0 = (value>>12) & 0xf;
                
                count++;
                if (count == 1) {jSlider1.setValue(val0);jSlider2.setValue(val1);jSlider3.setValue(val2);jSlider4.setValue(val3);continue;}
                if (count == 2) {jSlider5.setValue(val0);jSlider6.setValue(val1);jSlider7.setValue(val2);jSlider8.setValue(val3);continue;}
                if (count == 3) 
                {
                    jSlider9.setValue(val0);
                    jSlider10.setValue(val1);
                    jSlider11.setValue(val2);
                    jSlider12.setValue(val3);
                    continue;
                }
                if (count == 4) {jSlider13.setValue(val0);jSlider14.setValue(val1);jSlider15.setValue(val2);jSlider16.setValue(val3);continue;}
                if (count == 5) {jSlider17.setValue(val0);jSlider18.setValue(val1);jSlider19.setValue(val2);jSlider20.setValue(val3);continue;}
                if (count == 6) {jSlider21.setValue(val0);jSlider22.setValue(val1);jSlider23.setValue(val2);jSlider24.setValue(val3);continue;}
                if (count == 7) {jSlider25.setValue(val0);jSlider26.setValue(val1);jSlider27.setValue(val2);jSlider28.setValue(val3);continue;}
                if (count == 8) {jSlider29.setValue(val0);jSlider30.setValue(val1);jSlider31.setValue(val2);jSlider32.setValue(val3);continue;}
                
            }
            
            
        }
        jTextField1.setText(String.format("%01X", jSlider1.getValue()));
        jTextField2.setText(String.format("%01X", jSlider2.getValue()));
        jTextField3.setText(String.format("%01X", jSlider3.getValue()));
        jTextField4.setText(String.format("%01X", jSlider4.getValue()));
        jTextField5.setText(String.format("%01X", jSlider5.getValue()));
        jTextField6.setText(String.format("%01X", jSlider6.getValue()));
        jTextField7.setText(String.format("%01X", jSlider7.getValue()));
        jTextField8.setText(String.format("%01X", jSlider8.getValue()));
        jTextField9.setText(String.format("%01X", jSlider9.getValue()));
        jTextField10.setText(String.format("%01X", jSlider10.getValue()));
        jTextField11.setText(String.format("%01X", jSlider11.getValue()));
        jTextField12.setText(String.format("%01X", jSlider12.getValue()));
        jTextField13.setText(String.format("%01X", jSlider13.getValue()));
        jTextField14.setText(String.format("%01X", jSlider14.getValue()));
        jTextField15.setText(String.format("%01X", jSlider15.getValue()));
        jTextField16.setText(String.format("%01X", jSlider16.getValue()));
        jTextField17.setText(String.format("%01X", jSlider17.getValue()));
        jTextField18.setText(String.format("%01X", jSlider18.getValue()));
        jTextField19.setText(String.format("%01X", jSlider19.getValue()));
        jTextField20.setText(String.format("%01X", jSlider20.getValue()));
        jTextField21.setText(String.format("%01X", jSlider21.getValue()));
        jTextField22.setText(String.format("%01X", jSlider22.getValue()));
        jTextField23.setText(String.format("%01X", jSlider23.getValue()));
        jTextField24.setText(String.format("%01X", jSlider24.getValue()));
        jTextField25.setText(String.format("%01X", jSlider25.getValue()));
        jTextField26.setText(String.format("%01X", jSlider26.getValue()));
        jTextField27.setText(String.format("%01X", jSlider27.getValue()));
        jTextField28.setText(String.format("%01X", jSlider28.getValue()));
        jTextField29.setText(String.format("%01X", jSlider29.getValue()));
        jTextField30.setText(String.format("%01X", jSlider30.getValue()));
        jTextField31.setText(String.format("%01X", jSlider31.getValue()));
        jTextField32.setText(String.format("%01X", jSlider32.getValue()));
        
        mClassSetting--;
    }
        
    String note = "";
    int twangCounter = 0;
    byte[][] buildPlayBuffer()
    {
        byte[][] out_buf = new byte[16][32];
        String s= note;
        mClassSetting++;
        jTextField2b.setText("");
        mClassSetting--;
        int freq=0;
        int noise = 0;

        if (s.toLowerCase().endsWith("1")) {freq = 0x03BD;noise=31;}
        else if (s.toLowerCase().endsWith("2")) {freq = 0x0387;noise=31;}
        else if (s.toLowerCase().endsWith("3")) {freq = 0x0354;noise=30;}
        else if (s.toLowerCase().endsWith("4")) {freq = 0x0324;noise=29;}
        else if (s.toLowerCase().endsWith("5")) {freq = 0x02F7;noise=28;}
        else if (s.toLowerCase().endsWith("6")) {freq = 0x02CD;noise=27;}
        else if (s.toLowerCase().endsWith("7")) {freq = 0x02A4;noise=26;}
        else if (s.toLowerCase().endsWith("8")) {freq = 0x027E;noise=25;}

        
        else if (s.toLowerCase().endsWith("q")) {freq = 0x025B;noise=24;}
        else if (s.toLowerCase().endsWith("w")) {freq = 0x0239;noise=23;}
        else if (s.toLowerCase().endsWith("e")) {freq = 0x0219;noise=22;}
        else if (s.toLowerCase().endsWith("r")) {freq = 0x01FB;noise=21;}
        else if (s.toLowerCase().endsWith("t")) {freq = 0x01DE;noise=20;}
        else if (s.toLowerCase().endsWith("z")) {freq = 0x01C3;noise=19;}
        else if (s.toLowerCase().endsWith("u")) {freq = 0x01AA;noise=18;}
        else if (s.toLowerCase().endsWith("i")) {freq = 0x0192;noise=17;}
        
        else if (s.toLowerCase().endsWith("a")) {freq = 0x017C;noise=16;}
        else if (s.toLowerCase().endsWith("s")) {freq = 0x0166;noise=15;}
        else if (s.toLowerCase().endsWith("d")) {freq = 0x0152;noise=14;}
        else if (s.toLowerCase().endsWith("f")) {freq = 0x013F;noise=13;}
        else if (s.toLowerCase().endsWith("g")) {freq = 0x012D;noise=12;}
        else if (s.toLowerCase().endsWith("h")) {freq = 0x011C;noise=11;}
        else if (s.toLowerCase().endsWith("j")) {freq = 0x010C;noise=10;}
        else if (s.toLowerCase().endsWith("k")) {freq = 0x00FD;noise=9;}
        
        else if (s.toLowerCase().endsWith("y")) {freq = 0x00EF;noise=8;}
        else if (s.toLowerCase().endsWith("x")) {freq = 0x00E2;noise=7;}
        else if (s.toLowerCase().endsWith("c")) {freq = 0x00D5;noise=6;}
        else if (s.toLowerCase().endsWith("v")) {freq = 0x00C9;noise=5;}
        else if (s.toLowerCase().endsWith("b")) {freq = 0x00BE;noise=4;}
        else if (s.toLowerCase().endsWith("n")) {freq = 0x00B3;noise=3;}
        else if (s.toLowerCase().endsWith("m")) {freq = 0x00A9;noise=2;}
        else if (s.toLowerCase().endsWith(",")) {freq = 0x00A0;noise=1;}
        
        else if (freq == 0) return null;
        
        
        
        if (s.length()==0)return null;
        for (int duration = 0; duration < 32; duration++)
        {
            int twang = getTwang(twangCounter);
            int freqNow = freq+twang;
            for (int register = 0; register<16; register++)
            {
                out_buf[register][duration] = 0; // init all 0

                if (jCheckBox1.isSelected())
                {
                    if (register == 7) out_buf[register][duration] = (byte) (255-8);
                    if (register == 6) out_buf[register][duration] = (byte) (noise&0x1f);
                }
                else
                {
                    if (register == 7) out_buf[register][duration] = (byte) (255-1);
                    if (register == 6) out_buf[register][duration] = (byte) 0;
                }
                if (register == 0) out_buf[register][duration] = (byte) (freqNow & 0xff);
                if (register == 1) out_buf[register][duration] = (byte) ((freqNow>>8) & 0xff);
                if (register == 8) out_buf[register][duration] = (byte) (getAmplitude(duration) & 0xf);
                
            }
            twangCounter = (twangCounter+1)%8;
        } //; $50, $B0, $50, $B0, $50, $B0, $50, $B0
                
        return out_buf;
    }
    void readAll()
    {
        currentInstrument.name = jTextField1a.getText();
        updateADSRFromTextfield();
        currentInstrument.setADSR(jTextField43.getText());
        currentInstrument.setTWANG(jTextField44.getText());
    }
    public void deIconified()  {}
    
    
    Thread one = null;
    public boolean  asmStarted = false;
    public boolean stop = false;
    public boolean running = false;
    public boolean pausing = false;

    // start a thread for assembler
    public void startASM(final String filenameASM)
    {
        if (asmStarted) return;
        asmStarted = true;
        jButtonAssemble.setEnabled(false);
        // paranoia!
        if (one != null) return;
        one = new Thread() 
        {
            public void run() 
            {
                try 
                {
                    Thread.sleep(10);
                    try
                    {
                        Asmj asm = new Asmj(filenameASM, null, null, null, null, "",null);
                        String info = asm.getInfo();
                        final boolean asmOk = info.indexOf("0 errors detected.") >=0;
                        
                        SwingUtilities.invokeLater(new Runnable()
                        {
                            public void run()
                            {
                                asmResult(asmOk);
                            }
                        });                    
                    }
                    catch (final Throwable e)
                    {
                        SwingUtilities.invokeLater(new Runnable()
                        {
                            public void run()
                            {
                                log.addLog(e, WARN);
                                asmResult(false);
                            }
                        });                    
                    }
                } 
                catch(InterruptedException v) 
                {
                }

                one = null;
                jButtonAssemble.setEnabled(true);
                asmStarted = false;
            }  
        };

        one.setName("Run ASMJ with: "+filenameASM);
        one.start();           
    }    
    protected void asmResult(boolean asmOk)
    {
        if (asmOk)
        {
            VecXPanel vec = ((CSAMainFrame)mParent).getVecxy();
            ((CSAMainFrame)mParent).getInternalFrame(vec).toFront();


            String fname = Global.mainPathPrefix+"tmp"+File.separator+"musictmp.bin";
            vec.startUp(fname);
            log.addLog("Music-Assembly successfull...", INFO);
        }
        else
        {
            log.addLog("Music-Assembly not successfull, see ASM output...", WARN);
        }
        jButtonAssemble.setEnabled(true);
    }    
}
