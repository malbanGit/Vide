package de.malban.vide.veccy;


import de.malban.Global;
import de.malban.graphics.GFXVectorAnimation;
import de.malban.graphics.GFXVectorList;
import static de.malban.util.UtilityString.Int0;
import java.io.File;
import java.util.*;

public class BackGroundScenePanel extends javax.swing.JPanel {
    private BackGroundScene mBackGroundScene = new BackGroundScene();
    private BackGroundScenePool mBackGroundScenePool;

    private GFXVectorAnimation currentAnimation = new GFXVectorAnimation();
    private int inGuiUpdate=0;
    private int mClassSetting=0;
 
    /** Creates new form BackGroundScenePanel */
    public BackGroundScenePanel() {
        initComponents();
        mBackGroundScenePool = new BackGroundScenePool();
        resetConfigPool(false);

        actionAnimation.setSingleRepaint(true);
        actionAnimation.setScale(40);
        actionAnimation.setAngleX(0);
        actionAnimation.setAngleY(0);
        actionAnimation.setAngleZ(0);
        actionAnimation.setAxisAngleX(0);
        actionAnimation.setAxisAngleY(0);
        actionAnimation.setAxisAngleZ(0);
        jSliderSourceScale1StateChanged(null);

    }
    private void resetConfigPool(boolean select) /* allneeded*/
    {
        mClassSetting++;
        Collection<String> collectionKlasse = mBackGroundScenePool.getKlassenHashMap().values();
        Iterator<String> iterKlasse = collectionKlasse.iterator();
        int i = 0;
        String klasse = "AllScenes";

        Collection<BackGroundScene> colC = mBackGroundScenePool.getMapForKlasse(klasse).values();
        Iterator<BackGroundScene> iterC = colC.iterator();

        jComboBoxName.removeAllItems();
        i = 0;
        while (iterC.hasNext())
        {
            BackGroundScene item = iterC.next();
            jComboBoxName.addItem(item.mName);
            if ((i==0) && (select))
            {
                jComboBoxName.setSelectedIndex(0);
                mBackGroundScene = mBackGroundScenePool.get(item.mName);
                setAllFromCurrent();
            }
            i++;
        }
        if (!select)  jComboBoxName.setSelectedIndex(-1);
        mClassSetting--;
    }

    private void clearAll() /* allneeded*/
    {
        mClassSetting++;
        mBackGroundScene = new BackGroundScene();
        setAllFromCurrent();
        mClassSetting--;
    }

    private void setAllFromCurrent() /* allneeded*/
    {
        mClassSetting++;
        jComboBoxName.setSelectedItem(mBackGroundScene.mName);
        jTextFieldName.setText(mBackGroundScene.mName);

        jTextFieldAnimationName.setText(mBackGroundScene.msceneFile);
        jTextFieldYpos.setText(""+mBackGroundScene.myPos);
        jTextFieldXpos.setText(""+mBackGroundScene.mxPos);
        jTextFieldScale.setText(""+mBackGroundScene.mscale);
        jTextFieldIntensity.setText(""+mBackGroundScene.mintensity);

        loadAnimationFromElement(mBackGroundScene.msceneFile);
        mClassSetting--;
    }

    private void readAllToCurrent() /* allneeded*/
    {
        mBackGroundScene.mName = jTextFieldName.getText();
        mBackGroundScene.mClass = "AllScenes";
        mBackGroundScene.msceneFile = jTextFieldAnimationName.getText();
        mBackGroundScene.myPos = Int0(jTextFieldYpos.getText());
        mBackGroundScene.mxPos = Int0(jTextFieldXpos.getText());
        mBackGroundScene.mscale = Int0(jTextFieldScale.getText());
        mBackGroundScene.mintensity = Int0(jTextFieldIntensity.getText());


    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBoxName = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jButtonNew = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonSaveAsNew = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        actionAnimation = new de.malban.graphics.Single3dDisplayPanel();
        jTextFieldXpos = new javax.swing.JTextField();
        jTextFieldYpos = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldScale = new javax.swing.JTextField();
        jTextFieldIntensity = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldAnimationName = new javax.swing.JTextField();
        jButtonLoad2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSliderSourceScale1 = new javax.swing.JSlider();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jComboBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jButtonNew.setText("New");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonSaveAsNew.setText("Save as new");
        jButtonSaveAsNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAsNewActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(16, 16, 16)
                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSaveAsNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButtonDelete)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNew)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonSaveAsNew)
                    .addComponent(jButtonDelete))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        actionAnimation.setMaximumSize(new java.awt.Dimension(150, 150));
        actionAnimation.setMinimumSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout actionAnimationLayout = new javax.swing.GroupLayout(actionAnimation);
        actionAnimation.setLayout(actionAnimationLayout);
        actionAnimationLayout.setHorizontalGroup(
            actionAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 221, Short.MAX_VALUE)
        );
        actionAnimationLayout.setVerticalGroup(
            actionAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextFieldXpos.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldXpos.setText("0");
        jTextFieldXpos.setToolTipText("update position x while active");
        jTextFieldXpos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldXposFocusLost(evt);
            }
        });
        jTextFieldXpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldXposActionPerformed(evt);
            }
        });

        jTextFieldYpos.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldYpos.setText("0");
        jTextFieldYpos.setToolTipText("update position y while active");
        jTextFieldYpos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldYposFocusLost(evt);
            }
        });
        jTextFieldYpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldYposActionPerformed(evt);
            }
        });

        jLabel14.setText("y, x");
        jLabel14.setToolTipText("while the action is active change y and x position");

        jLabel15.setText("scale");
        jLabel15.setToolTipText("while the action is active change y and x position");

        jTextFieldScale.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldScale.setText("0");
        jTextFieldScale.setToolTipText("update position y while active");
        jTextFieldScale.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldScaleFocusLost(evt);
            }
        });
        jTextFieldScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldScaleActionPerformed(evt);
            }
        });

        jTextFieldIntensity.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldIntensity.setText("0");
        jTextFieldIntensity.setToolTipText("update position y while active");
        jTextFieldIntensity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIntensityFocusLost(evt);
            }
        });
        jTextFieldIntensity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIntensityActionPerformed(evt);
            }
        });

        jLabel16.setText("intensity");
        jLabel16.setToolTipText("while the action is active change y and x position");

        jTextFieldAnimationName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAnimationNameActionPerformed(evt);
            }
        });

        jButtonLoad2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/page_go.png"))); // NOI18N
        jButtonLoad2.setToolTipText("load animation");
        jButtonLoad2.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonLoad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoad2ActionPerformed(evt);
            }
        });

        jLabel5.setText("scene file");

        jSliderSourceScale1.setMajorTickSpacing(1);
        jSliderSourceScale1.setMaximum(50);
        jSliderSourceScale1.setMinimum(1);
        jSliderSourceScale1.setMinorTickSpacing(1);
        jSliderSourceScale1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderSourceScale1.setValue(20);
        jSliderSourceScale1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSourceScale1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(actionAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderSourceScale1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAnimationName, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldYpos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldXpos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldScale, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLoad2)
                .addGap(0, 127, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldAnimationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jButtonLoad2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldYpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldXpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(298, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(actionAnimation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSliderSourceScale1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        mClassSetting++;
        mBackGroundScene = new BackGroundScene();
        clearAll();
        resetConfigPool(false);
        mClassSetting--;
}//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        readAllToCurrent();
        mBackGroundScenePool.put(mBackGroundScene);
        mBackGroundScenePool.save();
        mClassSetting++;
        resetConfigPool(true);
        jComboBoxName.setSelectedItem(mBackGroundScene.mName);
        mClassSetting--;
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveAsNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAsNewActionPerformed
        mBackGroundScene = new BackGroundScene();
        readAllToCurrent();
        mBackGroundScenePool.putAsNew(mBackGroundScene);
        mBackGroundScenePool.save();
        mClassSetting++;
        resetConfigPool(true);
        jComboBoxName.setSelectedItem(mBackGroundScene.mName);
        mClassSetting--;
    }//GEN-LAST:event_jButtonSaveAsNewActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        readAllToCurrent();
        mBackGroundScenePool.remove(mBackGroundScene);
        mBackGroundScenePool.save();
        mClassSetting++;
        resetConfigPool(true);

        if (jComboBoxName.getSelectedIndex() == -1)
        {
            clearAll();
        }

        String key = jComboBoxName.getSelectedItem().toString();
        mBackGroundScene = mBackGroundScenePool.get(key);
        setAllFromCurrent();

        mClassSetting--;
}//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jComboBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNameActionPerformed
        if (mClassSetting > 0 ) return;
        String key = jComboBoxName.getSelectedItem().toString();
        mBackGroundScene = mBackGroundScenePool.get(key);
        setAllFromCurrent();
    }//GEN-LAST:event_jComboBoxNameActionPerformed

    private void jTextFieldXposFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldXposFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldXposFocusLost

    private void jTextFieldXposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldXposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldXposActionPerformed

    private void jTextFieldYposFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldYposFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldYposFocusLost

    private void jTextFieldYposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldYposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldYposActionPerformed

    private void jTextFieldScaleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldScaleFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldScaleFocusLost

    private void jTextFieldScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldScaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldScaleActionPerformed

    private void jTextFieldIntensityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIntensityFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIntensityFocusLost

    private void jTextFieldIntensityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIntensityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIntensityActionPerformed

    private void jTextFieldAnimationNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAnimationNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAnimationNameActionPerformed

    private void jButtonLoad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoad2ActionPerformed
        loadAnimation();
    }//GEN-LAST:event_jButtonLoad2ActionPerformed
    boolean loadAnimation()
    {
        String filename =Global.mainPathPrefix+"xml"+File.separator+"vectoranimation";
        filename = VectorListFileChoserJPanel.showSavePanel(filename, "Load Vector-Animation", true);
        return loadAnimationFromElement(filename);
    }
    boolean loadAnimationFromElement(String loadName)
    {
        boolean ok = false;
        if (loadName != null)
        {
            if (!loadName.toUpperCase().endsWith(".XML"))
            {
                loadName+= ".xml";
            }
            GFXVectorAnimation anim = new GFXVectorAnimation();
            
            ok = anim.loadFromXML(loadName);
//            currentAnimation.isAnimation = false;

            // build list with all stuff
            GFXVectorList vl = new GFXVectorList();
            for (int i=0; i<anim.size(); i++)
            {
                vl.add(anim.get(i));
            }
            vl.connectWherePossible(false);
            vl.resetDisplay();
            
            actionAnimation.setForegroundVectorList(vl);
            actionAnimation.setDelay(-1);
            
//setCurrentAnimation();



            if (ok)
            {
                if (inGuiUpdate == 0)
                    readAllToCurrent();
            }
        }
        
        loadName = de.malban.util.Utility.makeVideRelative(loadName);
        
        jTextFieldAnimationName.setText(loadName);
        return ok;
    }
    /**
     * @return the currentAnimation
     */
    public GFXVectorAnimation getCurrentAnimation() {
        return currentAnimation;
    }

    /**
     * @param currentAnimation the currentAnimation to set
     */
    public void setCurrentAnimation(GFXVectorAnimation currentAnimation) {
        this.currentAnimation = currentAnimation;
        actionAnimation.setAnimation(currentAnimation);
        actionAnimation.setDelay(5*10);
    }

    private void jSliderSourceScale1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSourceScale1StateChanged
        int value = jSliderSourceScale1.getValue();
        int max = jSliderSourceScale1.getMaximum();

        double scale = value - ((max-1)/2);
        if (value <((max/2)+1))
        {
            value--;
            int invScale = ((max/2))-value;
            if (invScale == 0)
            scale = 1;
            else
            scale = 1.0/invScale;
        }
        // smooth out "big steps"
        //        if (scale<1) scale += 0.25;
        if (scale>1) scale -= 0.75;
        if (scale>2) scale -= 0.5;
        if (scale>2.5) scale -= 0.25;
        if (scale>2.75) scale -= 0.5;
        actionAnimation.setScale(scale);
    }//GEN-LAST:event_jSliderSourceScale1StateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.malban.graphics.Single3dDisplayPanel actionAnimation;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonLoad2;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSaveAsNew;
    private javax.swing.JComboBox jComboBoxName;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider jSliderSourceScale1;
    private javax.swing.JTextField jTextFieldAnimationName;
    private javax.swing.JTextField jTextFieldIntensity;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldScale;
    private javax.swing.JTextField jTextFieldXpos;
    private javax.swing.JTextField jTextFieldYpos;
    // End of variables declaration//GEN-END:variables

}
