/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package de.malban.vide.veccy;

import java.util.Vector;

/**
 *
 * @author salchr
 */
public class ConditionalsPanel extends javax.swing.JPanel {
ActionData data;
    private int mClassSetting;
    private ActionData mActionData;
        ActionDataPool mActionDataPool = new ActionDataPool();;
    /**
     * Creates new form Conditionals
     */
    public ConditionalsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonRemoveTrigger = new javax.swing.JButton();
        jButtonAddTrigger = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTriggerTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jButtonUp = new javax.swing.JButton();
        jButtonDown = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTriggerTable1 = new javax.swing.JTable();
        jButtonAddTrigger1 = new javax.swing.JButton();
        jButtonRemoveTrigger1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jButtonNew = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonSaveAsNew = new javax.swing.JButton();
        jComboBoxName = new javax.swing.JComboBox();
        jButtonDelete1 = new javax.swing.JButton();
        jButtonDelete2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Event name");

        jButtonRemoveTrigger.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/delete.png"))); // NOI18N
        jButtonRemoveTrigger.setToolTipText("remove the selected  trigger");
        jButtonRemoveTrigger.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonRemoveTrigger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveTriggerActionPerformed(evt);
            }
        });

        jButtonAddTrigger.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/add.png"))); // NOI18N
        jButtonAddTrigger.setToolTipText("add one trigger");
        jButtonAddTrigger.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonAddTrigger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTriggerActionPerformed(evt);
            }
        });

        jTableTriggerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Source", "Y/var", "X/=", "object"
            }
        ));
        jTableTriggerTable.getTableHeader().setResizingAllowed(false);
        jTableTriggerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableTriggerTable);

        jLabel19.setText("Conditionals");

        jButtonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/arrow_up.png"))); // NOI18N
        jButtonUp.setToolTipText("select all");
        jButtonUp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonUp.setMargin(new java.awt.Insets(-1, -3, -1, -4));
        jButtonUp.setPreferredSize(new java.awt.Dimension(14, 18));
        jButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpActionPerformed(evt);
            }
        });

        jButtonDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/arrow_down.png"))); // NOI18N
        jButtonDown.setToolTipText("select all");
        jButtonDown.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonDown.setMargin(new java.awt.Insets(-1, -3, -1, -4));
        jButtonDown.setPreferredSize(new java.awt.Dimension(14, 18));
        jButtonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownActionPerformed(evt);
            }
        });

        jLabel2.setText("conditionals are always ANDed -> if true do the following:");

        jTableTriggerTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No", "Consequence taken", "Y/var", "X/=", "Sprite", "Action"
            }
        ));
        jTableTriggerTable1.getTableHeader().setResizingAllowed(false);
        jTableTriggerTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableTriggerTable1);

        jButtonAddTrigger1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/add.png"))); // NOI18N
        jButtonAddTrigger1.setToolTipText("add one trigger");
        jButtonAddTrigger1.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonAddTrigger1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTrigger1ActionPerformed(evt);
            }
        });

        jButtonRemoveTrigger1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/delete.png"))); // NOI18N
        jButtonRemoveTrigger1.setToolTipText("remove the selected  trigger");
        jButtonRemoveTrigger1.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonRemoveTrigger1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveTrigger1ActionPerformed(evt);
            }
        });

        jLabel20.setText("Results");

        jButtonNew.setText("New");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonSaveAsNew.setText("Save as new");
        jButtonSaveAsNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAsNewActionPerformed(evt);
            }
        });

        jComboBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNameActionPerformed(evt);
            }
        });

        jButtonDelete1.setText("Export");
        jButtonDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelete1ActionPerformed(evt);
            }
        });

        jButtonDelete2.setText("Import");
        jButtonDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelete2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("PRIORITY COL DETECT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel19)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonRemoveTrigger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddTrigger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel20)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonRemoveTrigger1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddTrigger1)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxName, 0, 127, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDelete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonDelete2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSaveAsNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDelete)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonSaveAsNew)
                    .addComponent(jButtonDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete1)
                    .addComponent(jButtonDelete2)
                    .addComponent(jButtonNew)
                    .addComponent(jLabel3))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAddTrigger)
                            .addComponent(jButtonRemoveTrigger)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jButtonDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(72, 72, 72)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAddTrigger1)
                            .addComponent(jButtonRemoveTrigger1))
                        .addGap(0, 101, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRemoveTriggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveTriggerActionPerformed
        if (data == null) return;

        int row = jTableTriggerTable.getSelectedRow();

        if (data.mtriggerByCause != null) if (data.mtriggerByCause.size()>row) data.mtriggerByCause.remove(row);
        if (data.mtriggerByTarget != null) if (data.mtriggerByTarget.size()>row) data.mtriggerByTarget.remove(row);
        if (data.mtriggerByActionID != null) if (data.mtriggerByActionID.size()>row) data.mtriggerByActionID.remove(row);
        if (data.mtriggerByY != null) if (data.mtriggerByY.size()>row) data.mtriggerByY.remove(row);
        if (data.mtriggerByX != null) if (data.mtriggerByX.size()>row) data.mtriggerByX.remove(row);
        if (data.mtriggerByTicks != null) if (data.mtriggerByTicks.size()>row) data.mtriggerByTicks.remove(row);
        if (data.mtriggerBySpriteID != null) if (data.mtriggerBySpriteID.size()>row) data.mtriggerBySpriteID.remove(row);

        resetTriggerTable();
    }//GEN-LAST:event_jButtonRemoveTriggerActionPerformed

    private void jButtonAddTriggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTriggerActionPerformed
        if (data == null) return;
        if (data.mtriggerByCause == null) data.mtriggerByCause = new Vector<String>();
        if (data.mtriggerByTarget == null) data.mtriggerByTarget = new Vector<String>();
        if (data.mtriggerByActionID == null) data.mtriggerByActionID = new Vector<String>();
        if (data.mtriggerByY == null) data.mtriggerByY = new Vector<Integer>();
        if (data.mtriggerByX == null) data.mtriggerByX = new Vector<Integer>();
        if (data.mtriggerByTicks == null) data.mtriggerByTicks = new Vector<String>();
        if (data.mtriggerBySpriteID == null) data.mtriggerBySpriteID = new Vector<String>();

        data.mtriggerByCause.addElement("");
        data.mtriggerByTarget.addElement("");
        data.mtriggerByActionID.addElement("");
        data.mtriggerByY.addElement(0);
        data.mtriggerByX.addElement(0);
        data.mtriggerByTicks.addElement("");
        data.mtriggerBySpriteID.addElement("");
        resetTriggerTable();
    }//GEN-LAST:event_jButtonAddTriggerActionPerformed

    private void jButtonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpActionPerformed
        
        //        updateOutput();
    }//GEN-LAST:event_jButtonUpActionPerformed

    private void jButtonDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownActionPerformed
        
        //        updateOutput();
    }//GEN-LAST:event_jButtonDownActionPerformed

    private void jButtonAddTrigger1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTrigger1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddTrigger1ActionPerformed

    private void jButtonRemoveTrigger1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveTrigger1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRemoveTrigger1ActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        mClassSetting++;
        mActionData = new ActionData();
        clearAll();
        resetConfigPool(false, "");
        mClassSetting--;
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        readAllToCurrent();
        mActionDataPool.remove(mActionData);
        mActionDataPool.save();
        mClassSetting++;
        String klasse = "";//jTextFieldKlasse.getText();
        resetConfigPool(true,klasse);

        if (jComboBoxName.getSelectedIndex() == -1)
        {
            clearAll();
        }

        String key = jComboBoxName.getSelectedItem().toString();
        mActionData = mActionDataPool.get(key);
        setAllFromCurrent();

        mClassSetting--;
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        readAllToCurrent();
        mActionDataPool.put(mActionData);
        mActionDataPool.save();
        mClassSetting++;
        String klasse = "";
        resetConfigPool(true, klasse);
        jComboBoxName.setSelectedItem(mActionData.mName);
        mClassSetting--;
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveAsNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAsNewActionPerformed
        mActionData = new ActionData();
        readAllToCurrent();
        mActionDataPool.putAsNew(mActionData);
        mActionDataPool.save();
        mClassSetting++;
        String klasse = "";
        resetConfigPool(true,klasse);
        jComboBoxName.setSelectedItem(mActionData.mName);
        mClassSetting--;
    }//GEN-LAST:event_jButtonSaveAsNewActionPerformed

    private void jComboBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNameActionPerformed
        if (mClassSetting > 0 ) return;
        String key = jComboBoxName.getSelectedItem().toString();
        mActionData = mActionDataPool.get(key);
        setAllFromCurrent();
    }//GEN-LAST:event_jComboBoxNameActionPerformed

    private void jButtonDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelete1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDelete1ActionPerformed

    private void jButtonDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelete2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDelete2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddTrigger;
    private javax.swing.JButton jButtonAddTrigger1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDelete1;
    private javax.swing.JButton jButtonDelete2;
    private javax.swing.JButton jButtonDown;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonRemoveTrigger;
    private javax.swing.JButton jButtonRemoveTrigger1;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSaveAsNew;
    private javax.swing.JButton jButtonUp;
    private javax.swing.JComboBox jComboBoxName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableTriggerTable;
    private javax.swing.JTable jTableTriggerTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    void resetTriggerTable()
    {}
    void clearAll()
    {}
    void resetConfigPool(boolean b, String s)
    {}
    void readAllToCurrent()
    {}   
    void setAllFromCurrent()
    {}
}
